[
  {
    "name": "chrome.accessibilityFeatures",
    "shortName": "accessibilityFeatures",
    "comment": "Use the <code>chrome.accessibilityFeatures</code> API to manage Chrome's accessibility features. This API relies on the <a href='types#ChromeSetting'>ChromeSetting prototype of the type API</a> for getting and setting individual accessibility features. In order to get feature states the extension must request <code>accessibilityFeatures.read</code> permission. For modifying feature state, the extension needs <code>accessibilityFeatures.modify</code> permission. Note that <code>accessibilityFeatures.modify</code> does not imply <code>accessibilityFeatures.read</code> permission.",
    "types": [],
    "properties": [
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "name": "animationPolicy"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Auto mouse click after mouse stops moving. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "autoclick"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Caret highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "caretHighlight"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Cursor color. The value indicates whether the feature is enabled or not, doesn't indicate the color of it. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "cursorColor"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Cursor highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "cursorHighlight"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Docked magnifier. The value indicates whether docked magnifier feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "dockedMagnifier"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Focus highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "focusHighlight"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>High contrast rendering mode. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "highContrast"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Enlarged cursor. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "largeCursor"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Full screen magnification. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "screenMagnifier"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Select-to-speak. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "selectToSpeak"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Spoken feedback (text-to-speech). The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "spokenFeedback"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Sticky modifier keys (like shift or alt). The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "stickyKeys"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Switch Access. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "switchAccess"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Virtual on-screen keyboard. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "virtualKeyboard"
      }
    ],
    "methods": []
  },
  {
    "name": "chrome.accessibilityPrivate",
    "shortName": "accessibilityPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The message the alert is showing.",
            "name": "message"
          }
        ],
        "comment": "Information about an alert",
        "name": "AlertInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A RGB hex-value color string (e.g. #803F82E4) that describes the color drawn outside of the focus ring and over the rest of the display.",
            "optional": true,
            "name": "backgroundColor"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A RGB hex-value color string (e.g. #3F8213) that describes the primary color of the focus ring.",
            "name": "color"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "An identifier for this focus ring, unique within the extension.",
            "optional": true,
            "name": "id"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ScreenRect",
              "referenceLink": true
            },
            "comment": "Array of rectangles to draw the accessibility focus ring around.",
            "name": "rects"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A RGB hex-value color string (e.g. #3F82E4) that describes the secondary color of the focus ring, if there is one.",
            "optional": true,
            "name": "secondaryColor"
          },
          {
            "type": "reference",
            "referenceType": "FocusType",
            "referenceLink": true,
            "comment": "The FocusType for the ring.",
            "name": "type"
          }
        ],
        "name": "FocusRingInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Height in pixels.",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Left coordinate in global screen coordinates.",
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Top coordinate in global screen coordinates.",
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Width in pixels.",
            "name": "width"
          }
        ],
        "comment": "Bounding rectangle in global screen coordinates.",
        "name": "ScreenRect"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Virtual key code, which is independent of the keyboard layout or modifier state.",
            "name": "keyCode"
          },
          {
            "type": "reference",
            "referenceType": "SyntheticKeyboardModifiers",
            "referenceLink": true,
            "comment": "Contains all active modifiers.",
            "optional": true,
            "name": "modifiers"
          },
          {
            "type": "reference",
            "referenceType": "SyntheticKeyboardEventType",
            "referenceLink": true,
            "name": "type"
          }
        ],
        "name": "SyntheticKeyboardEvent"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "alt modifier.",
            "optional": true,
            "name": "alt"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Control modifier.",
            "optional": true,
            "name": "ctrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "search modifier.",
            "optional": true,
            "name": "search"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "shift modifier.",
            "optional": true,
            "name": "shift"
          }
        ],
        "name": "SyntheticKeyboardModifiers"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if the touch accessibility flag should be set.",
            "optional": true,
            "name": "touchAccessibility"
          },
          {
            "type": "reference",
            "referenceType": "SyntheticMouseEventType",
            "referenceLink": true,
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "X coordinate for mouse event in global screen coordinates",
            "name": "x"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Y coordinate for mouse event in global screen coordinates",
            "name": "y"
          }
        ],
        "name": "SyntheticMouseEvent"
      },
      {
        "type": "?",
        "comment": "A subset of accelerator actions used by accessibility.",
        "name": "AcceleratorAction"
      },
      {
        "type": "?",
        "comment": "The type of visual appearance for the focus ring.",
        "name": "FocusType"
      },
      {
        "type": "?",
        "comment": "Accessibility gestures fired by the touch exploration controller.",
        "name": "Gesture"
      },
      {
        "type": "?",
        "comment": "The state of the Select-to-Speak extension",
        "name": "SelectToSpeakState"
      },
      {
        "type": "?",
        "comment": "Different Switch Access bubbles that can be shown or hidden.",
        "name": "SwitchAccessBubble"
      },
      {
        "type": "?",
        "comment": "Commands that can be triggered by switch activation.",
        "name": "SwitchAccessCommand"
      },
      {
        "type": "?",
        "comment": "Available actions to be shown in the Switch Access menu. Must be kept in sync with the strings in ash/system/accessibility/switch_access_menu_view.cc",
        "name": "SwitchAccessMenuAction"
      },
      {
        "type": "?",
        "comment": "The event to send",
        "name": "SyntheticKeyboardEventType"
      },
      {
        "type": "?",
        "comment": "The type of event to send",
        "name": "SyntheticMouseEventType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "darkenScreen"
      },
      {
        "type": "?",
        "name": "enableChromeVoxMouseEvents"
      },
      {
        "type": "?",
        "name": "enablePointScan"
      },
      {
        "type": "?",
        "name": "forwardKeyEventsToSwitchAccess"
      },
      {
        "type": "?",
        "name": "getBatteryDescription"
      },
      {
        "type": "?",
        "name": "getDisplayNameForLocale"
      },
      {
        "type": "?",
        "name": "handleScrollableBoundsForPointFound"
      },
      {
        "type": "?",
        "name": "moveMagnifierToRect"
      },
      {
        "type": "?",
        "name": "openSettingsSubpage"
      },
      {
        "type": "?",
        "name": "performAcceleratorAction"
      },
      {
        "type": "?",
        "name": "sendSyntheticKeyEvent"
      },
      {
        "type": "?",
        "name": "sendSyntheticMouseEvent"
      },
      {
        "type": "?",
        "name": "setFocusRings"
      },
      {
        "type": "?",
        "name": "setHighlights"
      },
      {
        "type": "?",
        "name": "setKeyboardListener"
      },
      {
        "type": "?",
        "name": "setNativeAccessibilityEnabled"
      },
      {
        "type": "?",
        "name": "setNativeChromeVoxArcSupportForCurrentApp"
      },
      {
        "type": "?",
        "name": "setSelectToSpeakState"
      },
      {
        "type": "?",
        "name": "setVirtualKeyboardVisible"
      },
      {
        "type": "?",
        "name": "toggleDictation"
      },
      {
        "type": "?",
        "name": "updateSwitchAccessBubble"
      }
    ]
  },
  {
    "name": "chrome.action",
    "shortName": "action",
    "comment": "Use actions to put icons in the main Google Chrome toolbar, to the right of the address bar. Actions can be set to take action on all pages (default_state: enabled) or only the current page (default_state: disabled). If an action is default disabled, the action appears grayed out when inactive. In addition to its <a href='action#icon'>icon</a>, an action can also have a <a href='action#tooltip'>tooltip</a>, a <a href='action#badge'>badge</a>, and a <a href='action#popups'>popup</a>.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the tab to query state for. If no tab is specified, the non-tab-specific state is returned.",
            "optional": true,
            "name": "tabId"
          }
        ],
        "name": "TabDetails"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "disable"
      },
      {
        "type": "?",
        "name": "enable"
      },
      {
        "type": "?",
        "name": "getBadgeBackgroundColor"
      },
      {
        "type": "?",
        "name": "getBadgeText"
      },
      {
        "type": "?",
        "name": "getPopup"
      },
      {
        "type": "?",
        "name": "getTitle"
      },
      {
        "type": "?",
        "name": "setBadgeBackgroundColor"
      },
      {
        "type": "?",
        "name": "setBadgeText"
      },
      {
        "type": "?",
        "name": "setIcon"
      },
      {
        "type": "?",
        "name": "setPopup"
      },
      {
        "type": "?",
        "name": "setTitle"
      }
    ]
  },
  {
    "name": "chrome.activityLogPrivate",
    "shortName": "activityLogPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ExtensionActivity",
              "referenceLink": true
            },
            "name": "activities"
          }
        ],
        "comment": "This holds the results of a lookup, the filter of the lookup, the time of the lookup, and whether there are more results that match.",
        "name": "ActivityResultSet"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "An ID of a row in the ActivityLog database that corresponds to the activity. ID is set only on activities retrieved from the database.",
            "optional": true,
            "name": "activityId"
          },
          {
            "type": "reference",
            "referenceType": "ExtensionActivityType",
            "referenceLink": true,
            "name": "activityType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "apiCall"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "argUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "args"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "count"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "ExtensionActivityDomVerb",
                "referenceLink": true,
                "optional": true,
                "name": "domVerb"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "extra"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "prerender"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "webRequest"
              }
            ],
            "optional": true,
            "name": "other"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "pageTitle"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "pageUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "time"
          }
        ],
        "comment": "This corresponds to a row from the ActivityLog database. Fields will be blank if they were specified precisely in a lookup filter.",
        "name": "ExtensionActivity"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ExtensionActivityFilter",
            "referenceLink": true,
            "name": "activityType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Exact match",
            "optional": true,
            "name": "apiCall"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Treated as a prefix",
            "optional": true,
            "name": "argUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Used to lookup a precise day; today is 0",
            "optional": true,
            "name": "daysAgo"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Exact match",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Treated as a prefix",
            "optional": true,
            "name": "pageUrl"
          }
        ],
        "comment": "Used to specify values for a lookup.",
        "name": "Filter"
      },
      {
        "type": "?",
        "name": "ExtensionActivityDomVerb"
      },
      {
        "type": "?",
        "comment": "Exact match or any",
        "name": "ExtensionActivityFilter"
      },
      {
        "type": "?",
        "name": "ExtensionActivityType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "deleteActivities"
      },
      {
        "type": "?",
        "name": "deleteActivitiesByExtension"
      },
      {
        "type": "?",
        "name": "deleteDatabase"
      },
      {
        "type": "?",
        "name": "deleteUrls"
      },
      {
        "type": "?",
        "name": "getExtensionActivities"
      }
    ]
  },
  {
    "name": "chrome.app",
    "shortName": "app",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [],
        "name": "DOMWindow"
      },
      {
        "type": "type",
        "properties": [],
        "comment": "TODO (it's a manifest)",
        "name": "Details"
      },
      {
        "type": "?",
        "name": "InstallState"
      },
      {
        "type": "?",
        "name": "RunningState"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getDetails"
      },
      {
        "type": "?",
        "name": "getIsInstalled"
      },
      {
        "type": "?",
        "name": "installState"
      },
      {
        "type": "?",
        "name": "runningState"
      }
    ]
  },
  {
    "name": "chrome.bookmarkManagerPrivate",
    "shortName": "bookmarkManagerPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "BookmarkNodeDataElement",
              "referenceLink": true
            },
            "name": "elements"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "name": "sameProfile"
          }
        ],
        "comment": "Information about the drag and drop data for use with drag and drop events.",
        "name": "BookmarkNodeData"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "BookmarkNodeDataElement",
              "referenceLink": true
            },
            "name": "children"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the bookmark. This is only provided if the data is from the same profile.",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the parent of the bookmark. This is only provided if the data is from the same profile.",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "url"
          }
        ],
        "name": "BookmarkNodeDataElement"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "canPaste"
      },
      {
        "type": "?",
        "name": "copy"
      },
      {
        "type": "?",
        "name": "cut"
      },
      {
        "type": "?",
        "name": "drop"
      },
      {
        "type": "?",
        "name": "getSubtree"
      },
      {
        "type": "?",
        "name": "paste"
      },
      {
        "type": "?",
        "name": "redo"
      },
      {
        "type": "?",
        "name": "removeTrees"
      },
      {
        "type": "?",
        "name": "sortChildren"
      },
      {
        "type": "?",
        "name": "startDrag"
      },
      {
        "type": "?",
        "name": "undo"
      }
    ]
  },
  {
    "name": "chrome.bookmarks",
    "shortName": "bookmarks",
    "comment": "Use the <code>chrome.bookmarks</code> API to create, organize, and otherwise manipulate bookmarks. Also see <a href='override'>Override Pages</a>, which you can use to create a custom Bookmark Manager page.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "BookmarkTreeNode",
              "referenceLink": true
            },
            "comment": "An ordered list of children of this node.",
            "optional": true,
            "name": "children"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "When this node was created, in milliseconds since the epoch (<code>new Date(dateAdded)</code>).",
            "optional": true,
            "name": "dateAdded"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "When the contents of this folder last changed, in milliseconds since the epoch.",
            "optional": true,
            "name": "dateGroupModified"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The unique identifier for the node. IDs are unique within the current profile, and they remain valid even after the browser is restarted.",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The 0-based position of this node within its parent folder.",
            "optional": true,
            "name": "index"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The <code>id</code> of the parent folder.  Omitted for the root node.",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The text displayed for the node.",
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "BookmarkTreeNodeUnmodifiable",
            "referenceLink": true,
            "comment": "Indicates the reason why this node is unmodifiable. The <var>managed</var> value indicates that this node was configured by the system administrator or by the custodian of a supervised user. Omitted if the node can be modified by the user and the extension (default).",
            "optional": true,
            "name": "unmodifiable"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL navigated to when a user clicks the bookmark. Omitted for folders.",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "A node (either a bookmark or a folder) in the bookmark tree.  Child nodes are ordered within their parent folder.",
        "name": "BookmarkTreeNode"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "index"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Defaults to the Other Bookmarks folder.",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "Object passed to the create() function.",
        "name": "CreateDetails"
      },
      {
        "type": "?",
        "comment": "Indicates the reason why this node is unmodifiable. The <var>managed</var> value indicates that this node was configured by the system administrator. Omitted if the node can be modified by the user and the extension (default).",
        "name": "BookmarkTreeNodeUnmodifiable"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "name": "MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE"
      },
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "name": "MAX_WRITE_OPERATIONS_PER_HOUR"
      }
    ],
    "methods": [
      {
        "type": "?",
        "name": "export"
      },
      {
        "type": "?",
        "name": "import"
      },
      {
        "type": "?",
        "name": "create"
      },
      {
        "type": "?",
        "name": "get"
      },
      {
        "type": "?",
        "name": "getChildren"
      },
      {
        "type": "?",
        "name": "getRecent"
      },
      {
        "type": "?",
        "name": "getSubTree"
      },
      {
        "type": "?",
        "name": "getTree"
      },
      {
        "type": "?",
        "name": "move"
      },
      {
        "type": "?",
        "name": "remove"
      },
      {
        "type": "?",
        "name": "removeTree"
      },
      {
        "type": "?",
        "name": "search"
      },
      {
        "type": "?",
        "name": "update"
      }
    ]
  },
  {
    "name": "chrome.browserAction",
    "shortName": "browserAction",
    "comment": "Use browser actions to put icons in the main Google Chrome toolbar, to the right of the address bar. In addition to its <a href='browserAction#icon'>icon</a>, a browser action can have a <a href='browserAction#tooltip'>tooltip</a>, a <a href='browserAction#badge'>badge</a>, and a <a href='browserAction#popups'>popup</a>.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the tab to query state for. If no tab is specified, the non-tab-specific state is returned.",
            "optional": true,
            "name": "tabId"
          }
        ],
        "name": "TabDetails"
      },
      {
        "type": "?",
        "name": "ColorArray"
      },
      {
        "type": "reference",
        "referenceType": "ImageData",
        "referenceLink": true,
        "comment": "Pixel data for an image. Must be an ImageData object; for example, from a <code>canvas</code> element.",
        "name": "ImageDataType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "disable"
      },
      {
        "type": "?",
        "name": "enable"
      },
      {
        "type": "?",
        "name": "getBadgeBackgroundColor"
      },
      {
        "type": "?",
        "name": "getBadgeText"
      },
      {
        "type": "?",
        "name": "getPopup"
      },
      {
        "type": "?",
        "name": "getTitle"
      },
      {
        "type": "?",
        "name": "openPopup"
      },
      {
        "type": "?",
        "name": "setBadgeBackgroundColor"
      },
      {
        "type": "?",
        "name": "setBadgeText"
      },
      {
        "type": "?",
        "name": "setIcon"
      },
      {
        "type": "?",
        "name": "setPopup"
      },
      {
        "type": "?",
        "name": "setTitle"
      }
    ]
  },
  {
    "name": "chrome.browsingData",
    "shortName": "browsingData",
    "comment": "Use the <code>chrome.browsingData</code> API to remove browsing data from a user's local profile.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' appcaches.",
            "optional": true,
            "name": "appcache"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The browser's cache.",
            "optional": true,
            "name": "cache"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Cache storage",
            "optional": true,
            "name": "cacheStorage"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The browser's cookies.",
            "optional": true,
            "name": "cookies"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The browser's download list.",
            "optional": true,
            "name": "downloads"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' file systems.",
            "optional": true,
            "name": "fileSystems"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The browser's stored form data.",
            "optional": true,
            "name": "formData"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The browser's history.",
            "optional": true,
            "name": "history"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' IndexedDB data.",
            "optional": true,
            "name": "indexedDB"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' local storage data.",
            "optional": true,
            "name": "localStorage"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Stored passwords.",
            "optional": true,
            "name": "passwords"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Plugins' data.",
            "optional": true,
            "name": "pluginData"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Server-bound certificates.",
            "optional": true,
            "name": "serverBoundCertificates"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Service Workers.",
            "optional": true,
            "name": "serviceWorkers"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' WebSQL data.",
            "optional": true,
            "name": "webSQL"
          }
        ],
        "comment": "A set of data types. Missing data types are interpreted as <code>false</code>.",
        "name": "DataTypeSet"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "When present, data for origins in this list is excluded from deletion. Can't be used together with <code>origins</code>. Only supported for cookies, storage and cache.  Cookies are excluded for the whole registrable domain.",
            "optional": true,
            "name": "excludeOrigins"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "extension"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "protectedWeb"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "unprotectedWeb"
              }
            ],
            "comment": "An object whose properties specify which origin types ought to be cleared. If this object isn't specified, it defaults to clearing only \"unprotected\" origins. Please ensure that you <em>really</em> want to remove application data before adding 'protectedWeb' or 'extensions'.",
            "optional": true,
            "name": "originTypes"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "When present, only data for origins in this list is deleted. Only supported for cookies, storage and cache. Cookies are cleared for the whole registrable domain.",
            "optional": true,
            "name": "origins"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Remove data accumulated on or after this date, represented in milliseconds since the epoch (accessible via the <code>getTime</code> method of the JavaScript <code>Date</code> object). If absent, defaults to 0 (which would remove all browsing data).",
            "optional": true,
            "name": "since"
          }
        ],
        "comment": "Options that determine exactly what data will be removed.",
        "name": "RemovalOptions"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "remove"
      },
      {
        "type": "?",
        "name": "removeAppcache"
      },
      {
        "type": "?",
        "name": "removeCache"
      },
      {
        "type": "?",
        "name": "removeCacheStorage"
      },
      {
        "type": "?",
        "name": "removeCookies"
      },
      {
        "type": "?",
        "name": "removeDownloads"
      },
      {
        "type": "?",
        "name": "removeFileSystems"
      },
      {
        "type": "?",
        "name": "removeFormData"
      },
      {
        "type": "?",
        "name": "removeHistory"
      },
      {
        "type": "?",
        "name": "removeIndexedDB"
      },
      {
        "type": "?",
        "name": "removeLocalStorage"
      },
      {
        "type": "?",
        "name": "removePasswords"
      },
      {
        "type": "?",
        "name": "removePluginData"
      },
      {
        "type": "?",
        "name": "removeServiceWorkers"
      },
      {
        "type": "?",
        "name": "removeWebSQL"
      },
      {
        "type": "?",
        "name": "settings"
      }
    ]
  },
  {
    "name": "chrome.chromeosInfoPrivate",
    "shortName": "chromeosInfoPrivate",
    "comment": "",
    "types": [
      {
        "type": "?",
        "comment": "Status of Google Assistant.",
        "name": "AssistantStatus"
      },
      {
        "type": "?",
        "comment": "Device type.",
        "name": "DeviceType"
      },
      {
        "type": "?",
        "comment": "Status of enterprise enrollment.",
        "name": "ManagedDeviceStatus"
      },
      {
        "type": "?",
        "comment": "Status of the play store. Note: 'available' means that the device supports the playstore but it is not enabled.",
        "name": "PlayStoreStatus"
      },
      {
        "type": "?",
        "comment": "Chrome OS system property name",
        "name": "PropertyName"
      },
      {
        "type": "?",
        "comment": "Current session type.",
        "name": "SessionType"
      },
      {
        "type": "?",
        "comment": "Status of stylus.",
        "name": "StylusStatus"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "get"
      },
      {
        "type": "?",
        "name": "isTabletModeEnabled"
      },
      {
        "type": "?",
        "name": "set"
      }
    ]
  },
  {
    "name": "chrome.cloudPrintPrivate",
    "shortName": "cloudPrintPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether printer is selected.",
            "name": "connect"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Unique printer id.",
            "name": "name"
          }
        ],
        "comment": "Settings per printer.",
        "name": "PrinterSettings"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether should printer be connected.",
            "name": "connectNewPrinters"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "PrinterSettings",
              "referenceLink": true
            },
            "comment": "Printer settings.",
            "name": "printers"
          }
        ],
        "comment": "Settings set by user.",
        "name": "UserSettings"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getClientId"
      },
      {
        "type": "?",
        "name": "getHostName"
      },
      {
        "type": "?",
        "name": "getPrinters"
      },
      {
        "type": "?",
        "name": "setupConnector"
      }
    ]
  },
  {
    "name": "chrome.commandLinePrivate",
    "shortName": "commandLinePrivate",
    "comment": "",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "hasSwitch"
      }
    ]
  },
  {
    "name": "chrome.commands",
    "shortName": "commands",
    "comment": "Use the commands API to add keyboard shortcuts that trigger actions in your extension, for example, an action to open the browser action or send a command to the extension.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The Extension Command description",
            "optional": true,
            "name": "description"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the Extension Command",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The shortcut active for this command, or blank if not active.",
            "optional": true,
            "name": "shortcut"
          }
        ],
        "name": "Command"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getAll"
      }
    ]
  },
  {
    "name": "chrome.contentSettings",
    "shortName": "contentSettings",
    "comment": "Use the <code>chrome.contentSettings</code> API to change settings that control whether websites can use features such as cookies, JavaScript, and plugins. More generally speaking, content settings allow you to customize Chrome's behavior on a per-site basis instead of globally.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Clear all content setting rules set by this extension.",
            "name": "clear"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Gets the current content setting for a given pair of URLs.",
            "name": "get"
          },
          {
            "type": "object",
            "properties": [],
            "name": "getResourceIdentifiers"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Applies a new content setting rule.",
            "name": "set"
          }
        ],
        "name": "ContentSetting"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A human readable description of the resource.",
            "optional": true,
            "name": "description"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The resource identifier for the given content type.",
            "name": "id"
          }
        ],
        "comment": "The only content type using resource identifiers is $(ref:contentSettings.plugins). For more information, see <a href=\"contentSettings#resource-identifiers\">Resource Identifiers</a>.",
        "name": "ResourceIdentifier"
      },
      {
        "type": "?",
        "name": "CameraContentSetting"
      },
      {
        "type": "?",
        "name": "CookiesContentSetting"
      },
      {
        "type": "?",
        "name": "FullscreenContentSetting"
      },
      {
        "type": "?",
        "name": "ImagesContentSetting"
      },
      {
        "type": "?",
        "name": "JavascriptContentSetting"
      },
      {
        "type": "?",
        "name": "LocationContentSetting"
      },
      {
        "type": "?",
        "name": "MicrophoneContentSetting"
      },
      {
        "type": "?",
        "name": "MouselockContentSetting"
      },
      {
        "type": "?",
        "name": "MultipleAutomaticDownloadsContentSetting"
      },
      {
        "type": "?",
        "name": "NotificationsContentSetting"
      },
      {
        "type": "?",
        "name": "PluginsContentSetting"
      },
      {
        "type": "?",
        "name": "PopupsContentSetting"
      },
      {
        "type": "?",
        "name": "PpapiBrokerContentSetting"
      },
      {
        "type": "?",
        "comment": "The scope of the ContentSetting. One of<br><var>regular</var>: setting for regular profile (which is inherited by the incognito profile if not overridden elsewhere),<br><var>incognito_session_only</var>: setting for incognito profile that can only be set during an incognito session and is deleted when the incognito session ends (overrides regular settings).",
        "name": "Scope"
      }
    ],
    "properties": [
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to allow sites to download multiple files automatically. One of <br><var>allow</var>: Allow sites to download multiple files automatically,<br><var>block</var>: Don't allow sites to download multiple files automatically,<br><var>ask</var>: Ask when a site wants to download files automatically after the first file. <br>Default is <var>ask</var>.<br>The primary URL is the URL of the top-level frame. The secondary URL is not used.",
        "name": "automaticDownloads"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to allow sites to access the camera. One of <br><var>allow</var>: Allow sites to access the camera,<br><var>block</var>: Don't allow sites to access the camera,<br><var>ask</var>: Ask when a site wants to access the camera. <br>Default is <var>ask</var>.<br>The primary URL is the URL of the document which requested camera access. The secondary URL is not used.<br>NOTE: The 'allow' setting is not valid if both patterns are '<all_urls>'.",
        "name": "camera"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to allow cookies and other local data to be set by websites. One of<br><var>allow</var>: Accept cookies,<br><var>block</var>: Block cookies,<br><var>session_only</var>: Accept cookies only for the current session. <br>Default is <var>allow</var>.<br>The primary URL is the URL representing the cookie origin. The secondary URL is the URL of the top-level frame.",
        "name": "cookies"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "<i>Deprecated.</i> No longer has any effect. Fullscreen permission is now automatically granted for all sites. Value is always <var>allow</var>.",
        "name": "fullscreen"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to show images. One of<br><var>allow</var>: Show images,<br><var>block</var>: Don't show images. <br>Default is <var>allow</var>.<br>The primary URL is the URL of the top-level frame. The secondary URL is the URL of the image.",
        "name": "images"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to run JavaScript. One of<br><var>allow</var>: Run JavaScript,<br><var>block</var>: Don't run JavaScript. <br>Default is <var>allow</var>.<br>The primary URL is the URL of the top-level frame. The secondary URL is not used.",
        "name": "javascript"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to allow Geolocation. One of <br><var>allow</var>: Allow sites to track your physical location,<br><var>block</var>: Don't allow sites to track your physical location,<br><var>ask</var>: Ask before allowing sites to track your physical location. <br>Default is <var>ask</var>.<br>The primary URL is the URL of the document which requested location data. The secondary URL is the URL of the top-level frame (which may or may not differ from the requesting URL).",
        "name": "location"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to allow sites to access the microphone. One of <br><var>allow</var>: Allow sites to access the microphone,<br><var>block</var>: Don't allow sites to access the microphone,<br><var>ask</var>: Ask when a site wants to access the microphone. <br>Default is <var>ask</var>.<br>The primary URL is the URL of the document which requested microphone access. The secondary URL is not used.<br>NOTE: The 'allow' setting is not valid if both patterns are '<all_urls>'.",
        "name": "microphone"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "<i>Deprecated.</i> No longer has any effect. Mouse lock permission is now automatically granted for all sites. Value is always <var>allow</var>.",
        "name": "mouselock"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to allow sites to show desktop notifications. One of<br><var>allow</var>: Allow sites to show desktop notifications,<br><var>block</var>: Don't allow sites to show desktop notifications,<br><var>ask</var>: Ask when a site wants to show desktop notifications. <br>Default is <var>ask</var>.<br>The primary URL is the URL of the document which wants to show the notification. The secondary URL is not used.",
        "name": "notifications"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to run plugins. One of<br><var>allow</var>: Run plugins automatically,<br><var>block</var>: Don't run plugins automatically,<br><var>detect_important_content</var>: Only run automatically those plugins that are detected as the website's main content.<br>The primary URL is the URL of the top-level frame. The secondary URL is not used.",
        "name": "plugins"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to allow sites to show pop-ups. One of<br><var>allow</var>: Allow sites to show pop-ups,<br><var>block</var>: Don't allow sites to show pop-ups. <br>Default is <var>block</var>.<br>The primary URL is the URL of the top-level frame. The secondary URL is not used.",
        "name": "popups"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": true,
        "comment": "Whether to allow sites to run plugins unsandboxed. One of <br><var>allow</var>: Allow sites to run plugins unsandboxed,<br><var>block</var>: Don't allow sites to run plugins unsandboxed,<br><var>ask</var>: Ask when a site wants to run a plugin unsandboxed. <br>Default is <var>ask</var>.<br>The primary URL is the URL of the top-level frame. The secondary URL is not used.",
        "name": "unsandboxedPlugins"
      }
    ],
    "methods": []
  },
  {
    "name": "chrome.contextMenus",
    "shortName": "contextMenus",
    "comment": "Use the <code>chrome.contextMenus</code> API to add items to Google Chrome's context menu. You can choose what types of objects your context menu additions apply to, such as images, hyperlinks, and pages.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A flag indicating the state of a checkbox or radio item after it is clicked.",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A flag indicating whether the element is editable (text input, textarea, etc.).",
            "name": "editable"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": " The <a href='webNavigation#frame_ids'>ID of the frame</a> of the element where the context menu was clicked, if it was in a frame.",
            "optional": true,
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": " The URL of the frame of the element where the context menu was clicked, if it was in a frame.",
            "optional": true,
            "name": "frameUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If the element is a link, the URL it points to.",
            "optional": true,
            "name": "linkUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "One of 'image', 'video', or 'audio' if the context menu was activated on one of these types of elements.",
            "optional": true,
            "name": "mediaType"
          },
          {
            "type": "?",
            "comment": "The ID of the menu item that was clicked.",
            "name": "menuItemId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL of the page where the menu item was clicked. This property is not set if the click occured in a context where there is no current page, such as in a launcher context menu.",
            "optional": true,
            "name": "pageUrl"
          },
          {
            "type": "?",
            "comment": "The parent ID, if any, for the item clicked.",
            "optional": true,
            "name": "parentMenuItemId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The text for the context selection, if any.",
            "optional": true,
            "name": "selectionText"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Will be present for elements with a 'src' URL.",
            "optional": true,
            "name": "srcUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A flag indicating the state of a checkbox or radio item before it was clicked.",
            "optional": true,
            "name": "wasChecked"
          }
        ],
        "comment": "Information sent when a context menu item is clicked.",
        "name": "OnClickData"
      },
      {
        "type": "?",
        "comment": "The different contexts a menu can appear in. Specifying 'all' is equivalent to the combination of all other contexts except for 'launcher'. The 'launcher' context is only supported by apps and is used to add menu items to the context menu that appears when clicking the app icon in the launcher/taskbar/dock/etc. Different platforms might put limitations on what is actually supported in a launcher context menu.",
        "name": "ContextType"
      },
      {
        "type": "?",
        "comment": "The type of menu item.",
        "name": "ItemType"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "The maximum number of top level extension items that can be added to an extension action context menu. Any items beyond this limit will be ignored.",
        "name": "ACTION_MENU_TOP_LEVEL_LIMIT"
      }
    ],
    "methods": [
      {
        "type": "?",
        "name": "create"
      },
      {
        "type": "?",
        "name": "remove"
      },
      {
        "type": "?",
        "name": "removeAll"
      },
      {
        "type": "?",
        "name": "update"
      }
    ]
  },
  {
    "name": "chrome.cookies",
    "shortName": "cookies",
    "comment": "Use the <code>chrome.cookies</code> API to query and modify cookies, and to be notified when they change.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The domain of the cookie (e.g. \"www.google.com\", \"example.com\").",
            "name": "domain"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The expiration date of the cookie as the number of seconds since the UNIX epoch. Not provided for session cookies.",
            "optional": true,
            "name": "expirationDate"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if the cookie is a host-only cookie (i.e. a request's host must exactly match the domain of the cookie).",
            "name": "hostOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if the cookie is marked as HttpOnly (i.e. the cookie is inaccessible to client-side scripts).",
            "name": "httpOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the cookie.",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The path of the cookie.",
            "name": "path"
          },
          {
            "type": "reference",
            "referenceType": "SameSiteStatus",
            "referenceLink": true,
            "comment": "The cookie's same-site status (i.e. whether the cookie is sent with cross-site requests).",
            "name": "sameSite"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if the cookie is marked as Secure (i.e. its scope is limited to secure channels, typically HTTPS).",
            "name": "secure"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if the cookie is a session cookie, as opposed to a persistent cookie with an expiration date.",
            "name": "session"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the cookie store containing this cookie, as provided in getAllCookieStores().",
            "name": "storeId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The value of the cookie.",
            "name": "value"
          }
        ],
        "comment": "Represents information about an HTTP cookie.",
        "name": "Cookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the cookie to access.",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the cookie store in which to look for the cookie. By default, the current execution context's cookie store will be used.",
            "optional": true,
            "name": "storeId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL with which the cookie to access is associated. This argument may be a full URL, in which case any data following the URL path (e.g. the query string) is simply ignored. If host permissions for this URL are not specified in the manifest file, the API call will fail.",
            "name": "url"
          }
        ],
        "comment": "Details to identify the cookie.",
        "name": "CookieDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The unique identifier for the cookie store.",
            "name": "id"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Identifiers of all the browser tabs that share this cookie store.",
            "name": "tabIds"
          }
        ],
        "comment": "Represents a cookie store in the browser. An incognito mode window, for instance, uses a separate cookie store from a non-incognito window.",
        "name": "CookieStore"
      },
      {
        "type": "?",
        "comment": "The underlying reason behind the cookie's change. If a cookie was inserted, or removed via an explicit call to \"chrome.cookies.remove\", \"cause\" will be \"explicit\". If a cookie was automatically removed due to expiry, \"cause\" will be \"expired\". If a cookie was removed due to being overwritten with an already-expired expiration date, \"cause\" will be set to \"expired_overwrite\".  If a cookie was automatically removed due to garbage collection, \"cause\" will be \"evicted\".  If a cookie was automatically removed due to a \"set\" call that overwrote it, \"cause\" will be \"overwrite\". Plan your response accordingly.",
        "name": "OnChangedCause"
      },
      {
        "type": "?",
        "comment": "A cookie's 'SameSite' state (https://tools.ietf.org/html/draft-west-first-party-cookies). 'no_restriction' corresponds to a cookie set with 'SameSite=None', 'lax' to 'SameSite=Lax', and 'strict' to 'SameSite=Strict'. 'unspecified' corresponds to a cookie set without the SameSite attribute.",
        "name": "SameSiteStatus"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "get"
      },
      {
        "type": "?",
        "name": "getAll"
      },
      {
        "type": "?",
        "name": "getAllCookieStores"
      },
      {
        "type": "?",
        "name": "remove"
      },
      {
        "type": "?",
        "name": "set"
      }
    ]
  },
  {
    "name": "chrome.dashboardPrivate",
    "shortName": "dashboardPrivate",
    "comment": "",
    "types": [
      {
        "type": "?",
        "comment": "Whether the API call succeeded, or the reason for failure.",
        "name": "Result"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "showPermissionPromptForDelegatedInstall"
      }
    ]
  },
  {
    "name": "chrome.dataReductionProxy",
    "shortName": "dataReductionProxy",
    "comment": "Use the <code>chrome.dataReductionProxy</code> API to control the data reduction proxy and access usage metrics. This API relies on the <a href='types#ChromeSetting'>ChromeSetting prototype of the type API</a> for getting and setting Chrome's configuration.",
    "types": [],
    "properties": [
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "Each item contains the number uncompressed bytes through data reduction proxy per day.",
        "name": "dataReductionDailyContentLength"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "Each item contains the number of compressed bytes through data reduction proxy per day.",
        "name": "dataReductionDailyReceivedLength"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "Flag to enable collection and reporting of detailed data usage.",
        "name": "dataUsageReportingEnabled"
      },
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "Flag to enable data usage reduction by sending requests via data reduction proxy. This preference's value is a boolean, defaulting to <code>false</code>.",
        "name": "spdyProxyEnabled"
      }
    ],
    "methods": [
      {
        "type": "?",
        "name": "clearDataSavings"
      },
      {
        "type": "?",
        "name": "getDataUsage"
      }
    ]
  },
  {
    "name": "chrome.debugger",
    "shortName": "debugger",
    "comment": "The <code>chrome.debugger</code> API serves as an alternate transport for Chrome's <a href='https://developer.chrome.com/devtools/docs/debugger-protocol'>remote debugging protocol</a>. Use <code>chrome.debugger</code> to attach to one or more tabs to instrument network interaction, debug JavaScript, mutate the DOM and CSS, etc. Use the Debuggee <code>tabId</code> to target tabs with sendCommand and route events by <code>tabId</code> from onEvent callbacks.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The id of the extension which you intend to debug. Attaching to an extension background page is only possible when 'silent-debugger-extension-api' flag is enabled on the target browser.",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The id of the tab which you intend to debug.",
            "optional": true,
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The opaque id of the debug target.",
            "optional": true,
            "name": "targetId"
          }
        ],
        "comment": "Debuggee identifier. Either tabId or extensionId must be specified",
        "name": "Debuggee"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if debugger is already attached.",
            "name": "attached"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The extension id, defined if type = 'background_page'.",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Target favicon URL.",
            "optional": true,
            "name": "faviconUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Target id.",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The tab id, defined if type == 'page'.",
            "optional": true,
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Target page title.",
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "TargetInfoType",
            "referenceLink": true,
            "comment": "Target type.",
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Target URL.",
            "name": "url"
          }
        ],
        "comment": "Debug target information",
        "name": "TargetInfo"
      },
      {
        "type": "?",
        "comment": "Connection termination reason.",
        "name": "DetachReason"
      },
      {
        "type": "?",
        "comment": "Target type.",
        "name": "TargetInfoType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "attach"
      },
      {
        "type": "?",
        "name": "detach"
      },
      {
        "type": "?",
        "name": "getTargets"
      },
      {
        "type": "?",
        "name": "sendCommand"
      }
    ]
  },
  {
    "name": "chrome.declarativeContent",
    "shortName": "declarativeContent",
    "comment": "Use the <code>chrome.declarativeContent</code> API to take actions depending on the content of a page, without requiring permission to read the page's content.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Matches if all of the CSS selectors in the array match displayed elements in a frame with the same origin as the page's main frame. All selectors in this array must be <a href=\"http://www.w3.org/TR/selectors4/#compound\">compound selectors</a> to speed up matching. Note: Listing hundreds of CSS selectors or listing CSS selectors that match hundreds of times per page can slow down web sites.",
            "optional": true,
            "name": "css"
          },
          {
            "type": "reference",
            "referenceType": "PageStateMatcherInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the bookmarked state of the page is equal to the specified value. Requres the <a href='declare_permissions'>bookmarks permission</a>.",
            "optional": true,
            "name": "isBookmarked"
          },
          {
            "type": "reference",
            "referenceType": "UrlFilter",
            "referenceLink": true,
            "comment": "Matches if the conditions of the <code>UrlFilter</code> are fulfilled for the top-level URL of the page.",
            "optional": true,
            "name": "pageUrl"
          }
        ],
        "comment": "Matches the state of a web page based on various criteria.",
        "name": "PageStateMatcher"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the content script runs in all frames of the matching page, or in only the top frame. Default is <code>false</code>.",
            "optional": true,
            "name": "allFrames"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Names of CSS files to be injected as a part of the content script.",
            "optional": true,
            "name": "css"
          },
          {
            "type": "reference",
            "referenceType": "RequestContentScriptInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Names of JavaScript files to be injected as a part of the content script.",
            "optional": true,
            "name": "js"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to insert the content script on <code>about:blank</code> and <code>about:srcdoc</code>. Default is <code>false</code>.",
            "optional": true,
            "name": "matchAboutBlank"
          }
        ],
        "comment": "Declarative event action that injects a content script. <p><b>WARNING:</b> This action is still experimental and is not supported on stable builds of Chrome.</p>",
        "name": "RequestContentScript"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "?",
            "comment": "Either an <code>ImageData</code> object or a dictionary {size -> ImageData} representing an icon to be set. If the icon is specified as a dictionary, the image used is chosen depending on the screen's pixel density. If the number of image pixels that fit into one screen space unit equals <code>scale</code>, then an image with size <code>scale * n</code> is selected, where <i>n</i> is the size of the icon in the UI. At least one image must be specified. Note that <code>details.imageData = foo</code> is equivalent to <code>details.imageData = {'16': foo}</code>.",
            "optional": true,
            "name": "imageData"
          },
          {
            "type": "reference",
            "referenceType": "SetIconInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Declarative event action that sets the n-<abbr title=\"device-independent pixel\">dip</abbr> square icon for the extension's $(ref:pageAction page action) or $(ref:browserAction browser action) while the corresponding conditions are met. This action can be used without <a href=\"declare_permissions.html#host-permissions\">host permissions</a>, but the extension must have a page or browser action.<p>Exactly one of <code>imageData</code> or <code>path</code> must be specified. Both are dictionaries mapping a number of pixels to an image representation. The image representation in <code>imageData</code> is an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ImageData\">ImageData</a> object; for example, from a <code>canvas</code> element, while the image representation in <code>path</code> is the path to an image file relative to the extension's manifest. If <code>scale</code> screen pixels fit into a device-independent pixel, the <code>scale * n</code> icon is used. If that scale is missing, another image is resized to the required size.</p>",
        "name": "SetIcon"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ShowActionInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Declarative event action that shows the extension's toolbar action ($(ref:pageAction page action) or $(ref:browserAction browser action)) while the corresponding conditions are met. This action can be used without <a href=\"declare_permissions#host-permissions\">host permissions</a>. If the extension has the <a href=\"activeTab.html\">activeTab</a> permission, clicking the page action grants access to the active tab.",
        "name": "ShowAction"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ShowPageActionInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Declarative event action that shows the extension's $(ref:pageAction page action) while the corresponding conditions are met. This action can be used without <a href=\"declare_permissions#host-permissions\">host permissions</a>, but the extension must have a page action. If the extension has the <a href=\"activeTab.html\">activeTab</a> permission, clicking the page action grants access to the active tab.",
        "name": "ShowPageAction"
      },
      {
        "type": "reference",
        "referenceType": "ImageData",
        "referenceLink": true,
        "comment": "See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ImageData\">https://developer.mozilla.org/en-US/docs/Web/API/ImageData</a>.",
        "name": "ImageDataType"
      },
      {
        "type": "?",
        "name": "PageStateMatcherInstanceType"
      },
      {
        "type": "?",
        "name": "RequestContentScriptInstanceType"
      },
      {
        "type": "?",
        "name": "SetIconInstanceType"
      },
      {
        "type": "?",
        "name": "ShowActionInstanceType"
      },
      {
        "type": "?",
        "name": "ShowPageActionInstanceType"
      }
    ],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.declarativeWebRequest",
    "shortName": "declarativeWebRequest",
    "comment": "<em><strong>Note:</strong> this API is currently on hold, without concrete plans to move to stable.</em> Use the <code>chrome.declarativeWebRequest</code> API to intercept, block, or modify requests in-flight. It is significantly faster than the <a href='webRequest'><code>chrome.webRequest</code> API</a> because you can register rules that are evaluated in the browser rather than the JavaScript engine, which reduces roundtrip latencies and allows higher efficiency.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RequestCookie",
            "referenceLink": true,
            "comment": "Cookie to be added to the request. No field may be undefined.",
            "name": "cookie"
          },
          {
            "type": "reference",
            "referenceType": "AddRequestCookieInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Adds a cookie to the request or overrides a cookie, in case another cookie of the same name exists already. Note that it is preferred to use the Cookies API because this is computationally less expensive.",
        "name": "AddRequestCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ResponseCookie",
            "referenceLink": true,
            "comment": "Cookie to be added to the response. The name and value need to be specified.",
            "name": "cookie"
          },
          {
            "type": "reference",
            "referenceType": "AddResponseCookieInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Adds a cookie to the response or overrides a cookie, in case another cookie of the same name exists already. Note that it is preferred to use the Cookies API because this is computationally less expensive.",
        "name": "AddResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "AddResponseHeaderInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "HTTP response header name.",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "HTTP response header value.",
            "name": "value"
          }
        ],
        "comment": "Adds the response header to the response of this web request. As multiple response headers may share the same name, you need to first remove and then add a new response header in order to replace one.",
        "name": "AddResponseHeader"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "CancelRequestInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Declarative event action that cancels a network request.",
        "name": "CancelRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RequestCookie",
            "referenceLink": true,
            "comment": "Filter for cookies that will be modified. All empty entries are ignored.",
            "name": "filter"
          },
          {
            "type": "reference",
            "referenceType": "EditRequestCookieInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "reference",
            "referenceType": "RequestCookie",
            "referenceLink": true,
            "comment": "Attributes that shall be overridden in cookies that machted the filter. Attributes that are set to an empty string are removed.",
            "name": "modification"
          }
        ],
        "comment": "Edits one or more cookies of request. Note that it is preferred to use the Cookies API because this is computationally less expensive.",
        "name": "EditRequestCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "FilterResponseCookie",
            "referenceLink": true,
            "comment": "Filter for cookies that will be modified. All empty entries are ignored.",
            "name": "filter"
          },
          {
            "type": "reference",
            "referenceType": "EditResponseCookieInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "reference",
            "referenceType": "ResponseCookie",
            "referenceLink": true,
            "comment": "Attributes that shall be overridden in cookies that machted the filter. Attributes that are set to an empty string are removed.",
            "name": "modification"
          }
        ],
        "comment": "Edits one or more cookies of response. Note that it is preferred to use the Cookies API because this is computationally less expensive.",
        "name": "EditResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Inclusive lower bound on the cookie lifetime (specified in seconds after current time). Only cookies whose expiration date-time is set to 'now + ageLowerBound' or later fulfill this criterion. Session cookies do not meet the criterion of this filter. The cookie lifetime is calculated from either 'max-age' or 'expires' cookie attributes. If both are specified, 'max-age' is used to calculate the cookie lifetime.",
            "optional": true,
            "name": "ageLowerBound"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Inclusive upper bound on the cookie lifetime (specified in seconds after current time). Only cookies whose expiration date-time is in the interval [now, now + ageUpperBound] fulfill this criterion. Session cookies and cookies whose expiration date-time is in the past do not meet the criterion of this filter. The cookie lifetime is calculated from either 'max-age' or 'expires' cookie attributes. If both are specified, 'max-age' is used to calculate the cookie lifetime.",
            "optional": true,
            "name": "ageUpperBound"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the Domain cookie attribute.",
            "optional": true,
            "name": "domain"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the Expires cookie attribute.",
            "optional": true,
            "name": "expires"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Existence of the HttpOnly cookie attribute.",
            "optional": true,
            "name": "httpOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the Max-Age cookie attribute",
            "optional": true,
            "name": "maxAge"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Name of a cookie.",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the Path cookie attribute.",
            "optional": true,
            "name": "path"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Existence of the Secure cookie attribute.",
            "optional": true,
            "name": "secure"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Filters session cookies. Session cookies have no lifetime specified in any of 'max-age' or 'expires' attributes.",
            "optional": true,
            "name": "sessionCookie"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of a cookie, may be padded in double-quotes.",
            "optional": true,
            "name": "value"
          }
        ],
        "comment": "A filter of a cookie in HTTP Responses.",
        "name": "FilterResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "?",
            "comment": "Matches if the header name contains all of the specified strings.",
            "optional": true,
            "name": "nameContains"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the header name is equal to the specified string.",
            "optional": true,
            "name": "nameEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the header name starts with the specified string.",
            "optional": true,
            "name": "namePrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the header name ends with the specified string.",
            "optional": true,
            "name": "nameSuffix"
          },
          {
            "type": "?",
            "comment": "Matches if the header value contains all of the specified strings.",
            "optional": true,
            "name": "valueContains"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the header value is equal to the specified string.",
            "optional": true,
            "name": "valueEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the header value starts with the specified string.",
            "optional": true,
            "name": "valuePrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the header value ends with the specified string.",
            "optional": true,
            "name": "valueSuffix"
          }
        ],
        "comment": "Filters request headers for various criteria. Multiple criteria are evaluated as a conjunction.",
        "name": "HeaderFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If set, rules with the specified tag are ignored. This ignoring is not persisted, it affects only rules and their actions of the same network request stage. Note that rules are executed in descending order of their priorities. This action affects rules of lower priority than the current rule. Rules with the same priority may or may not be ignored.",
            "optional": true,
            "name": "hasTag"
          },
          {
            "type": "reference",
            "referenceType": "IgnoreRulesInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If set, rules with a lower priority than the specified value are ignored. This boundary is not persisted, it affects only rules and their actions of the same network request stage.",
            "optional": true,
            "name": "lowerPriorityThan"
          }
        ],
        "comment": "Masks all rules that match the specified criteria.",
        "name": "IgnoreRules"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A match pattern that may contain capture groups. Capture groups are referenced in the Perl syntax ($1, $2, ...) instead of the RE2 syntax (\\1, \\2, ...) in order to be closer to JavaScript Regular Expressions.",
            "name": "from"
          },
          {
            "type": "reference",
            "referenceType": "RedirectByRegExInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Destination pattern.",
            "name": "to"
          }
        ],
        "comment": "Redirects a request by applying a regular expression on the URL. The regular expressions use the <a href=\"https://github.com/google/re2/blob/master/doc/syntax.txt\">RE2 syntax</a>.",
        "name": "RedirectByRegEx"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RedirectRequestInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Destination to where the request is redirected.",
            "name": "redirectUrl"
          }
        ],
        "comment": "Declarative event action that redirects a network request.",
        "name": "RedirectRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RedirectToEmptyDocumentInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Declarative event action that redirects a network request to an empty document.",
        "name": "RedirectToEmptyDocument"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RedirectToTransparentImageInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Declarative event action that redirects a network request to a transparent image.",
        "name": "RedirectToTransparentImage"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RequestCookie",
            "referenceLink": true,
            "comment": "Filter for cookies that will be removed. All empty entries are ignored.",
            "name": "filter"
          },
          {
            "type": "reference",
            "referenceType": "RemoveRequestCookieInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Removes one or more cookies of request. Note that it is preferred to use the Cookies API because this is computationally less expensive.",
        "name": "RemoveRequestCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RemoveRequestHeaderInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "HTTP request header name (case-insensitive).",
            "name": "name"
          }
        ],
        "comment": "Removes the request header of the specified name. Do not use SetRequestHeader and RemoveRequestHeader with the same header name on the same request. Each request header name occurs only once in each request.",
        "name": "RemoveRequestHeader"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "FilterResponseCookie",
            "referenceLink": true,
            "comment": "Filter for cookies that will be removed. All empty entries are ignored.",
            "name": "filter"
          },
          {
            "type": "reference",
            "referenceType": "RemoveResponseCookieInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          }
        ],
        "comment": "Removes one or more cookies of response. Note that it is preferred to use the Cookies API because this is computationally less expensive.",
        "name": "RemoveResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RemoveResponseHeaderInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "HTTP request header name (case-insensitive).",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "HTTP request header value (case-insensitive).",
            "optional": true,
            "name": "value"
          }
        ],
        "comment": "Removes all response headers of the specified names and values.",
        "name": "RemoveResponseHeader"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Name of a cookie.",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of a cookie, may be padded in double-quotes.",
            "optional": true,
            "name": "value"
          }
        ],
        "comment": "A filter or specification of a cookie in HTTP Requests.",
        "name": "RequestCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Matches if the MIME media type of a response (from the HTTP Content-Type header) is contained in the list.",
            "optional": true,
            "name": "contentType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Matches if the MIME media type of a response (from the HTTP Content-Type header) is <em>not</em> contained in the list.",
            "optional": true,
            "name": "excludeContentType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderFilter",
              "referenceLink": true
            },
            "comment": "Matches if none of the request headers is matched by any of the HeaderFilters.",
            "optional": true,
            "name": "excludeRequestHeaders"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderFilter",
              "referenceLink": true
            },
            "comment": "Matches if none of the response headers is matched by any of the HeaderFilters.",
            "optional": true,
            "name": "excludeResponseHeaders"
          },
          {
            "type": "reference",
            "referenceType": "UrlFilter",
            "referenceLink": true,
            "comment": "Matches if the conditions of the UrlFilter are fulfilled for the 'first party' URL of the request. The 'first party' URL of a request, when present, can be different from the request's target URL, and describes what is considered 'first party' for the sake of third-party checks for cookies.",
            "optional": true,
            "name": "firstPartyForCookiesUrl"
          },
          {
            "type": "reference",
            "referenceType": "RequestMatcherInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderFilter",
              "referenceLink": true
            },
            "comment": "Matches if some of the request headers is matched by one of the HeaderFilters.",
            "optional": true,
            "name": "requestHeaders"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "chrome.webRequest.ResourceType",
              "referenceLink": true
            },
            "comment": "Matches if the request type of a request is contained in the list. Requests that cannot match any of the types will be filtered out.",
            "optional": true,
            "name": "resourceType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderFilter",
              "referenceLink": true
            },
            "comment": "Matches if some of the response headers is matched by one of the HeaderFilters.",
            "optional": true,
            "name": "responseHeaders"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Stage",
              "referenceLink": true
            },
            "comment": "Contains a list of strings describing stages. Allowed values are 'onBeforeRequest', 'onBeforeSendHeaders', 'onHeadersReceived', 'onAuthRequired'. If this attribute is present, then it limits the applicable stages to those listed. Note that the whole condition is only applicable in stages compatible with all attributes.",
            "optional": true,
            "name": "stages"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If set to true, matches requests that are subject to third-party cookie policies. If set to false, matches all other requests.",
            "optional": true,
            "name": "thirdPartyForCookies"
          },
          {
            "type": "reference",
            "referenceType": "UrlFilter",
            "referenceLink": true,
            "comment": "Matches if the conditions of the UrlFilter are fulfilled for the URL of the request.",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "Matches network events by various criteria.",
        "name": "RequestMatcher"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the Domain cookie attribute.",
            "optional": true,
            "name": "domain"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the Expires cookie attribute.",
            "optional": true,
            "name": "expires"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Existence of the HttpOnly cookie attribute.",
            "optional": true,
            "name": "httpOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the Max-Age cookie attribute",
            "optional": true,
            "name": "maxAge"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Name of a cookie.",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the Path cookie attribute.",
            "optional": true,
            "name": "path"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Existence of the Secure cookie attribute.",
            "optional": true,
            "name": "secure"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of a cookie, may be padded in double-quotes.",
            "optional": true,
            "name": "value"
          }
        ],
        "comment": "A specification of a cookie in HTTP Responses.",
        "name": "ResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "SendMessageToExtensionInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The value that will be passed in the <code>message</code> attribute of the dictionary that is passed to the event handler.",
            "name": "message"
          }
        ],
        "comment": "Triggers the $(ref:declarativeWebRequest.onMessage) event.",
        "name": "SendMessageToExtension"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "SetRequestHeaderInstanceType",
            "referenceLink": true,
            "name": "instanceType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "HTTP request header name.",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "HTTP request header value.",
            "name": "value"
          }
        ],
        "comment": "Sets the request header of the specified name to the specified value. If a header with the specified name did not exist before, a new one is created. Header name comparison is always case-insensitive. Each request header name occurs only once in each request.",
        "name": "SetRequestHeader"
      },
      {
        "type": "?",
        "name": "AddRequestCookieInstanceType"
      },
      {
        "type": "?",
        "name": "AddResponseCookieInstanceType"
      },
      {
        "type": "?",
        "name": "AddResponseHeaderInstanceType"
      },
      {
        "type": "?",
        "name": "CancelRequestInstanceType"
      },
      {
        "type": "?",
        "name": "EditRequestCookieInstanceType"
      },
      {
        "type": "?",
        "name": "EditResponseCookieInstanceType"
      },
      {
        "type": "?",
        "name": "IgnoreRulesInstanceType"
      },
      {
        "type": "?",
        "name": "RedirectByRegExInstanceType"
      },
      {
        "type": "?",
        "name": "RedirectRequestInstanceType"
      },
      {
        "type": "?",
        "name": "RedirectToEmptyDocumentInstanceType"
      },
      {
        "type": "?",
        "name": "RedirectToTransparentImageInstanceType"
      },
      {
        "type": "?",
        "name": "RemoveRequestCookieInstanceType"
      },
      {
        "type": "?",
        "name": "RemoveRequestHeaderInstanceType"
      },
      {
        "type": "?",
        "name": "RemoveResponseCookieInstanceType"
      },
      {
        "type": "?",
        "name": "RemoveResponseHeaderInstanceType"
      },
      {
        "type": "?",
        "name": "RequestMatcherInstanceType"
      },
      {
        "type": "?",
        "name": "SendMessageToExtensionInstanceType"
      },
      {
        "type": "?",
        "name": "SetRequestHeaderInstanceType"
      },
      {
        "type": "?",
        "name": "Stage"
      }
    ],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.desktopCapture",
    "shortName": "desktopCapture",
    "comment": "Desktop Capture API that can be used to capture content of screen, individual windows or tabs.",
    "types": [
      {
        "type": "?",
        "comment": "Enum used to define set of desktop media sources used in chooseDesktopMedia().",
        "name": "DesktopCaptureSourceType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "cancelChooseDesktopMedia"
      },
      {
        "type": "?",
        "name": "chooseDesktopMedia"
      }
    ]
  },
  {
    "name": "chrome.dom",
    "shortName": "dom",
    "comment": "Use the <code>chrome.dom</code> API to access special DOM APIs for Extensions",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "openOrClosedShadowRoot"
      }
    ]
  },
  {
    "name": "chrome.echoPrivate",
    "shortName": "echoPrivate",
    "comment": "",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getOfferInfo"
      },
      {
        "type": "?",
        "name": "getOobeTimestamp"
      },
      {
        "type": "?",
        "name": "getRegistrationCode"
      },
      {
        "type": "?",
        "name": "getUserConsent"
      },
      {
        "type": "?",
        "name": "setOfferInfo"
      }
    ]
  },
  {
    "name": "chrome.enterprise",
    "shortName": "enterprise",
    "comment": "",
    "types": [],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.enterprise.platformKeysPrivate",
    "shortName": "enterprise.platformKeysPrivate",
    "comment": "",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "challengeMachineKey"
      },
      {
        "type": "?",
        "name": "challengeUserKey"
      }
    ]
  },
  {
    "name": "chrome.events",
    "shortName": "events",
    "comment": "The <code>chrome.events</code> namespace contains common types used by APIs dispatching events to notify you when something interesting happens.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Registers an event listener <em>callback</em> to an event.",
            "name": "addListener"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Registers rules to handle events.",
            "name": "addRules"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Returns currently registered rules.",
            "name": "getRules"
          },
          {
            "type": "object",
            "properties": [],
            "name": "hasListener"
          },
          {
            "type": "object",
            "properties": [],
            "name": "hasListeners"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Deregisters an event listener <em>callback</em> from an event.",
            "name": "removeListener"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Unregisters currently registered rules.",
            "name": "removeRules"
          }
        ],
        "comment": "An object which allows the addition and removal of listeners for a Chrome event.",
        "name": "Event"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "List of actions that are triggered if one of the conditions is fulfilled.",
            "name": "actions"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "List of conditions that can trigger the actions.",
            "name": "conditions"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Optional identifier that allows referencing this rule.",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Optional priority of this rule. Defaults to 100.",
            "optional": true,
            "name": "priority"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Tags can be used to annotate rules and perform operations on sets of rules.",
            "optional": true,
            "name": "tags"
          }
        ],
        "comment": "Description of a declarative rule for handling events.",
        "name": "Rule"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the host name of the URL contains a specified string. To test whether a host name component has a prefix 'foo', use hostContains: '.foo'. This matches 'www.foobar.com' and 'foo.com', because an implicit dot is added at the beginning of the host name. Similarly, hostContains can be used to match against component suffix ('foo.') and to exactly match against components ('.foo.'). Suffix- and exact-matching for the last components need to be done separately using hostSuffix, because no implicit dot is added at the end of the host name.",
            "optional": true,
            "name": "hostContains"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the host name of the URL is equal to a specified string.",
            "optional": true,
            "name": "hostEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the host name of the URL starts with a specified string.",
            "optional": true,
            "name": "hostPrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the host name of the URL ends with a specified string.",
            "optional": true,
            "name": "hostSuffix"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the URL without query segment and fragment identifier matches a specified regular expression. Port numbers are stripped from the URL if they match the default port number. The regular expressions use the <a href=\"https://github.com/google/re2/blob/master/doc/syntax.txt\">RE2 syntax</a>.",
            "optional": true,
            "name": "originAndPathMatches"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the path segment of the URL contains a specified string.",
            "optional": true,
            "name": "pathContains"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the path segment of the URL is equal to a specified string.",
            "optional": true,
            "name": "pathEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the path segment of the URL starts with a specified string.",
            "optional": true,
            "name": "pathPrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the path segment of the URL ends with a specified string.",
            "optional": true,
            "name": "pathSuffix"
          },
          {
            "type": "array",
            "elementType": {
              "type": "?"
            },
            "comment": "Matches if the port of the URL is contained in any of the specified port lists. For example <code>[80, 443, [1000, 1200]]</code> matches all requests on port 80, 443 and in the range 1000-1200.",
            "optional": true,
            "name": "ports"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the query segment of the URL contains a specified string.",
            "optional": true,
            "name": "queryContains"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the query segment of the URL is equal to a specified string.",
            "optional": true,
            "name": "queryEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the query segment of the URL starts with a specified string.",
            "optional": true,
            "name": "queryPrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the query segment of the URL ends with a specified string.",
            "optional": true,
            "name": "querySuffix"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Matches if the scheme of the URL is equal to any of the schemes specified in the array.",
            "optional": true,
            "name": "schemes"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the URL (without fragment identifier) contains a specified string. Port numbers are stripped from the URL if they match the default port number.",
            "optional": true,
            "name": "urlContains"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the URL (without fragment identifier) is equal to a specified string. Port numbers are stripped from the URL if they match the default port number.",
            "optional": true,
            "name": "urlEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the URL (without fragment identifier) matches a specified regular expression. Port numbers are stripped from the URL if they match the default port number. The regular expressions use the <a href=\"https://github.com/google/re2/blob/master/doc/syntax.txt\">RE2 syntax</a>.",
            "optional": true,
            "name": "urlMatches"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the URL (without fragment identifier) starts with a specified string. Port numbers are stripped from the URL if they match the default port number.",
            "optional": true,
            "name": "urlPrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Matches if the URL (without fragment identifier) ends with a specified string. Port numbers are stripped from the URL if they match the default port number.",
            "optional": true,
            "name": "urlSuffix"
          }
        ],
        "comment": "Filters URLs for various criteria. See <a href='events#filtered'>event filtering</a>. All criteria are case sensitive.",
        "name": "UrlFilter"
      }
    ],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.extension",
    "shortName": "extension",
    "comment": "The <code>chrome.extension</code> API has utilities that can be used by any extension page. It includes support for exchanging messages between an extension and its content scripts or between extensions, as described in detail in <a href='messaging'>Message Passing</a>.",
    "types": [
      {
        "type": "?",
        "comment": "The type of extension view.",
        "name": "ViewType"
      },
      {
        "type": "?",
        "comment": "True for content scripts running inside incognito tabs, and for extension pages running inside an incognito process. The latter only applies to extensions with 'split' incognito_behavior.",
        "name": "inIncognitoContext"
      },
      {
        "type": "?",
        "comment": "Set for the lifetime of a callback if an ansychronous extension api has resulted in an error. If no error has occured lastError will be <var>undefined</var>.",
        "name": "lastError"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getBackgroundPage"
      },
      {
        "type": "?",
        "name": "getExtensionTabs"
      },
      {
        "type": "?",
        "name": "getURL"
      },
      {
        "type": "?",
        "name": "getViews"
      },
      {
        "type": "?",
        "name": "isAllowedFileSchemeAccess"
      },
      {
        "type": "?",
        "name": "isAllowedIncognitoAccess"
      },
      {
        "type": "?",
        "name": "sendRequest"
      },
      {
        "type": "?",
        "name": "setUpdateUrlData"
      }
    ]
  },
  {
    "name": "chrome.extensionsManifestTypes",
    "shortName": "extensionsManifestTypes",
    "comment": "Schemas for structured manifest entries",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "The set of URL patterns to match against. If any of the given patterns match a URL, its contents will be granted the specified capabilities.",
            "name": "matches"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "The set of capabilities to grant matched contents. This is currently limited to <code>clipboardRead</code>, <code>clipboardWrite</code>, and <code>unlimitedStorage</code>.",
            "name": "permissions"
          }
        ],
        "comment": "The <code>content_capabilities</code> manifest entry allows an extension to grant certain additional capabilities to web contents whose locations match a given set of URL patterns.",
        "name": "ContentCapabilities"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If <code>true</code>, messages sent via $(ref:runtime.connect) or $(ref:runtime.sendMessage) will set $(ref:runtime.MessageSender.tlsChannelId) if those methods request it to be. If <code>false</code>, $(ref:runtime.MessageSender.tlsChannelId) will never be set under any circumstance.",
            "optional": true,
            "name": "accepts_tls_channel_id"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "<p>The IDs of extensions or apps that are allowed to connect. If left empty or unspecified, no extensions or apps can connect.</p><p>The wildcard <code>\"*\"</code> will allow all extensions and apps to connect.</p>",
            "optional": true,
            "name": "ids"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "<p>The URL patterns for <em>web pages</em> that are allowed to connect. <em>This does not affect content scripts.</em> If left empty or unspecified, no web pages can connect.</p><p>Patterns cannot include wildcard domains nor subdomains of <a href=\"http://publicsuffix.org/list/\">(effective) top level domains</a>; <code>*://google.com/*</code> and <code>http://*.chromium.org/*</code> are valid, while <code>&lt;all_urls&gt;</code>, <code>http://./*</code>, <code>*://*.com/*</code>, and even <code>http://*.appspot.com/*</code> are not.</p>",
            "optional": true,
            "name": "matches"
          }
        ],
        "name": "ExternallyConnectable"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If <code>true</code>, a Chrome user agent stylesheet will be applied to your options page. The default value is <code>false</code>. We do not recommend you enable it as it no longer results in a consistent UI with Chrome. This option will be removed in Manifest V3.",
            "optional": true,
            "name": "chrome_style"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "<p>If <code>true</code>, your extension's options page will be opened in a new tab rather than embedded in <em>chrome://extensions</em>. The default is <code>false</code>, and we recommend that you don't change it.</p><p><strong>This is only useful to delay the inevitable deprecation of the old options UI!</strong> It will be removed soon, so try not to use it. It will break.</p>",
            "optional": true,
            "name": "open_in_tab"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The path to your options page, relative to your extension's root.",
            "name": "page"
          }
        ],
        "comment": "The <code>options_ui</code> manifest property declares how the options page should be displayed.",
        "name": "OptionsUI"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "object",
              "properties": [
                {
                  "type": "primitive",
                  "primitiveType": "intrinsic",
                  "optional": true,
                  "name": "interfaceClass"
                },
                {
                  "type": "primitive",
                  "primitiveType": "intrinsic",
                  "optional": true,
                  "name": "interfaceProtocol"
                },
                {
                  "type": "primitive",
                  "primitiveType": "intrinsic",
                  "optional": true,
                  "name": "interfaceSubclass"
                },
                {
                  "type": "primitive",
                  "primitiveType": "intrinsic",
                  "optional": true,
                  "name": "productId"
                },
                {
                  "type": "primitive",
                  "primitiveType": "intrinsic",
                  "name": "vendorId"
                }
              ]
            },
            "comment": "A list of $(ref:usb.DeviceFilter USB device filters) matching supported devices. A device only needs to match one of the provided filters. A <code>vendorId</code> is required and only one of <code>productId</code> or <code>interfaceClass</code> may be provided.",
            "name": "filters"
          }
        ],
        "comment": "The <code>usb_printers</code> manifest property lists the USB printers supported by an app implementing the $(ref:printerProvider) API.",
        "name": "UsbPrinters"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If <code>true</code>, gives permission to an app to use the $(ref:bluetoothLowEnergy) API",
            "optional": true,
            "name": "low_energy"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If <code>true</code>, gives permission to an app to use the advertisement functions in the $(ref:bluetoothLowEnergy) API",
            "optional": true,
            "name": "peripheral"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If <code>true</code>, gives permission to an app to use the $(ref:bluetoothSocket) API",
            "optional": true,
            "name": "socket"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "The <code>uuids</code> manifest property declares the list of protocols, profiles and services that an app can communicate using.",
            "optional": true,
            "name": "uuids"
          }
        ],
        "comment": "The <code>bluetooth</code> manifest property give permission to an app to use the $(ref:bluetooth) API. A list of UUIDs can be optionally specified to enable communication with devices.",
        "name": "bluetooth"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": true,
                "optional": true,
                "name": "connect"
              }
            ],
            "comment": "The <code>tcp</code> manifest property declares which sockets.tcp operations an app can issue.",
            "optional": true,
            "name": "tcp"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": true,
                "optional": true,
                "name": "listen"
              }
            ],
            "comment": "The <code>tcpServer</code> manifest property declares which sockets.tcpServer operations an app can issue.",
            "optional": true,
            "name": "tcpServer"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": true,
                "optional": true,
                "name": "bind"
              },
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": true,
                "optional": true,
                "name": "multicastMembership"
              },
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": true,
                "optional": true,
                "name": "send"
              }
            ],
            "comment": "The <code>udp</code> manifest property declares which sockets.udp operations an app can issue.",
            "optional": true,
            "name": "udp"
          }
        ],
        "comment": "The <code>sockets</code> manifest property declares which sockets operations an app can issue.",
        "name": "sockets"
      },
      {
        "type": "array",
        "elementType": {
          "type": "object",
          "properties": [
            {
              "type": "primitive",
              "primitiveType": "intrinsic",
              "optional": true,
              "name": "enabled_on_launch"
            },
            {
              "type": "primitive",
              "primitiveType": "intrinsic",
              "name": "id"
            }
          ]
        },
        "comment": "The <code>kiosk_secondary_apps</code> manifest property lists the secondary kiosk apps to be deployed by the primary kiosk app.",
        "name": "KioskSecondaryApps"
      },
      {
        "type": "?",
        "comment": "<p>A single string or a list of strings representing host:port patterns.</p>",
        "name": "SocketHostPatterns"
      },
      {
        "type": "?",
        "comment": "This API provides programmatic access to the user interface elements of Chrome. This includes everything in the web view, and optionally Chrome's full user interface.",
        "name": "automation"
      }
    ],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.extensionTypes",
    "shortName": "extensionTypes",
    "comment": "The <code>chrome.extensionTypes</code> API contains type declarations for Chrome extensions.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If allFrames is <code>true</code>, implies that the CSS should be removed from all frames of current page. By default, it's <code>false</code> and is only removed from the top frame. If <code>true</code> and <code>frameId</code> is set, then the code is removed from the selected frame and all of its child frames.",
            "optional": true,
            "name": "allFrames"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "CSS code to remove.",
            "optional": true,
            "name": "code"
          },
          {
            "type": "reference",
            "referenceType": "CSSOrigin",
            "referenceLink": true,
            "comment": "The <a href=\"https://www.w3.org/TR/css3-cascade/#cascading-origins\">origin</a> of the CSS to remove. Defaults to <code>\"author\"</code>.",
            "optional": true,
            "name": "cssOrigin"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "CSS file to remove.",
            "optional": true,
            "name": "file"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The <a href='webNavigation#frame_ids'>frame</a> from where the CSS should be removed. Defaults to 0 (the top-level frame).",
            "optional": true,
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If matchAboutBlank is true, then the code is also removed from about:blank and about:srcdoc frames if your extension has access to its parent document. By default it is <code>false</code>.",
            "optional": true,
            "name": "matchAboutBlank"
          }
        ],
        "comment": "Details of the CSS to remove. Either the code or the file property must be set, but both may not be set at the same time.",
        "name": "DeleteInjectionDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ImageFormat",
            "referenceLink": true,
            "comment": "The format of the resulting image.  Default is <code>\"jpeg\"</code>.",
            "optional": true,
            "name": "format"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "When format is <code>\"jpeg\"</code>, controls the quality of the resulting image.  This value is ignored for PNG images.  As quality is decreased, the resulting image will have more visual artifacts, and the number of bytes needed to store it will decrease.",
            "optional": true,
            "name": "quality"
          }
        ],
        "comment": "Details about the format and quality of an image.",
        "name": "ImageDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If allFrames is <code>true</code>, implies that the JavaScript or CSS should be injected into all frames of current page. By default, it's <code>false</code> and is only injected into the top frame. If <code>true</code> and <code>frameId</code> is set, then the code is inserted in the selected frame and all of its child frames.",
            "optional": true,
            "name": "allFrames"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "JavaScript or CSS code to inject.<br><br><b>Warning:</b><br>Be careful using the <code>code</code> parameter. Incorrect use of it may open your extension to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\">cross site scripting</a> attacks.",
            "optional": true,
            "name": "code"
          },
          {
            "type": "reference",
            "referenceType": "CSSOrigin",
            "referenceLink": true,
            "comment": "The <a href=\"https://www.w3.org/TR/css3-cascade/#cascading-origins\">origin</a> of the CSS to inject. This may only be specified for CSS, not JavaScript. Defaults to <code>\"author\"</code>.",
            "optional": true,
            "name": "cssOrigin"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "JavaScript or CSS file to inject.",
            "optional": true,
            "name": "file"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The <a href='webNavigation#frame_ids'>frame</a> where the script or CSS should be injected. Defaults to 0 (the top-level frame).",
            "optional": true,
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If matchAboutBlank is true, then the code is also injected in about:blank and about:srcdoc frames if your extension has access to its parent document. Code cannot be inserted in top-level about:-frames. By default it is <code>false</code>.",
            "optional": true,
            "name": "matchAboutBlank"
          },
          {
            "type": "reference",
            "referenceType": "RunAt",
            "referenceLink": true,
            "comment": "The soonest that the JavaScript or CSS will be injected into the tab. Defaults to \"document_idle\".",
            "optional": true,
            "name": "runAt"
          }
        ],
        "comment": "Details of the script or CSS to inject. Either the code or the file property must be set, but both may not be set at the same time.",
        "name": "InjectDetails"
      },
      {
        "type": "?",
        "comment": "The <a href=\"https://www.w3.org/TR/css3-cascade/#cascading-origins\">origin</a> of injected CSS.",
        "name": "CSSOrigin"
      },
      {
        "type": "?",
        "comment": "The format of an image.",
        "name": "ImageFormat"
      },
      {
        "type": "?",
        "comment": "The soonest that the JavaScript or CSS will be injected into the tab.",
        "name": "RunAt"
      }
    ],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.fileBrowserHandler",
    "shortName": "fileBrowserHandler",
    "comment": "Use the <code>chrome.fileBrowserHandler</code> API to extend the Chrome OS file browser. For example, you can use this API to enable users to upload files to your website.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Array of Entry instances representing files that are targets of this action (selected in ChromeOS file browser).",
            "name": "entries"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the tab that raised this event. Tab IDs are unique within a browser session.",
            "optional": true,
            "name": "tab_id"
          }
        ],
        "comment": "Event details payload for fileBrowserHandler.onExecute event.",
        "name": "FileHandlerExecuteEventDetails"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "selectFile"
      }
    ]
  },
  {
    "name": "chrome.fontSettings",
    "shortName": "fontSettings",
    "comment": "Use the <code>chrome.fontSettings</code> API to manage Chrome's font settings.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The display name of the font.",
            "name": "displayName"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The font ID.",
            "name": "fontId"
          }
        ],
        "comment": "Represents a font name.",
        "name": "FontName"
      },
      {
        "type": "?",
        "comment": "A CSS generic font family.",
        "name": "GenericFamily"
      },
      {
        "type": "?",
        "comment": "One of<br><var>not_controllable</var>: cannot be controlled by any extension<br><var>controlled_by_other_extensions</var>: controlled by extensions with higher precedence<br><var>controllable_by_this_extension</var>: can be controlled by this extension<br><var>controlled_by_this_extension</var>: controlled by this extension",
        "name": "LevelOfControl"
      },
      {
        "type": "?",
        "comment": "An ISO 15924 script code. The default, or global, script is represented by script code \"Zyyy\".",
        "name": "ScriptCode"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "clearDefaultFixedFontSize"
      },
      {
        "type": "?",
        "name": "clearDefaultFontSize"
      },
      {
        "type": "?",
        "name": "clearFont"
      },
      {
        "type": "?",
        "name": "clearMinimumFontSize"
      },
      {
        "type": "?",
        "name": "getDefaultFixedFontSize"
      },
      {
        "type": "?",
        "name": "getDefaultFontSize"
      },
      {
        "type": "?",
        "name": "getFont"
      },
      {
        "type": "?",
        "name": "getFontList"
      },
      {
        "type": "?",
        "name": "getMinimumFontSize"
      },
      {
        "type": "?",
        "name": "setDefaultFixedFontSize"
      },
      {
        "type": "?",
        "name": "setDefaultFontSize"
      },
      {
        "type": "?",
        "name": "setFont"
      },
      {
        "type": "?",
        "name": "setMinimumFontSize"
      }
    ]
  },
  {
    "name": "chrome.gcm",
    "shortName": "gcm",
    "comment": "Use <code>chrome.gcm</code> to enable apps and extensions to send and receive messages through the <a href='http://developer.android.com/google/gcm/'>Google Cloud Messaging Service</a>.",
    "types": [],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "The maximum size (in bytes) of all key/value pairs in a message.",
        "name": "MAX_MESSAGE_SIZE"
      }
    ],
    "methods": [
      {
        "type": "?",
        "name": "register"
      },
      {
        "type": "?",
        "name": "send"
      },
      {
        "type": "?",
        "name": "unregister"
      }
    ]
  },
  {
    "name": "chrome.history",
    "shortName": "history",
    "comment": "Use the <code>chrome.history</code> API to interact with the browser's record of visited pages. You can add, remove, and query for URLs in the browser's history. To override the history page with your own version, see <a href='override'>Override Pages</a>.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The unique identifier for the item.",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "When this page was last loaded, represented in milliseconds since the epoch.",
            "optional": true,
            "name": "lastVisitTime"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The title of the page when it was last loaded.",
            "optional": true,
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The number of times the user has navigated to this page by typing in the address.",
            "optional": true,
            "name": "typedCount"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL navigated to by a user.",
            "optional": true,
            "name": "url"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The number of times the user has navigated to this page.",
            "optional": true,
            "name": "visitCount"
          }
        ],
        "comment": "An object encapsulating one result of a history query.",
        "name": "HistoryItem"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL for the operation. It must be in the format as returned from a call to history.search.",
            "name": "url"
          }
        ],
        "name": "UrlDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The unique identifier for the item.",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The visit ID of the referrer.",
            "name": "referringVisitId"
          },
          {
            "type": "reference",
            "referenceType": "TransitionType",
            "referenceLink": true,
            "comment": "The <a href='#transition_types'>transition type</a> for this visit from its referrer.",
            "name": "transition"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The unique identifier for this visit.",
            "name": "visitId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "When this visit occurred, represented in milliseconds since the epoch.",
            "optional": true,
            "name": "visitTime"
          }
        ],
        "comment": "An object encapsulating one visit to a URL.",
        "name": "VisitItem"
      },
      {
        "type": "?",
        "comment": "The <a href='#transition_types'>transition type</a> for this visit from its referrer.",
        "name": "TransitionType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "addUrl"
      },
      {
        "type": "?",
        "name": "deleteAll"
      },
      {
        "type": "?",
        "name": "deleteRange"
      },
      {
        "type": "?",
        "name": "deleteUrl"
      },
      {
        "type": "?",
        "name": "getVisits"
      },
      {
        "type": "?",
        "name": "search"
      }
    ]
  },
  {
    "name": "chrome.i18n",
    "shortName": "i18n",
    "comment": "Use the <code>chrome.i18n</code> infrastructure to implement internationalization across your whole app or extension.",
    "types": [
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "An ISO language code such as <code>en</code> or <code>fr</code>. For a complete list of languages supported by this method, see <a href='http://src.chromium.org/viewvc/chrome/trunk/src/third_party/cld/languages/internal/languages.cc'>kLanguageInfoTable</a>. For an unknown language, <code>und</code> will be returned, which means that [percentage] of the text is unknown to CLD",
        "name": "LanguageCode"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "detectLanguage"
      },
      {
        "type": "?",
        "name": "getAcceptLanguages"
      },
      {
        "type": "?",
        "name": "getMessage"
      },
      {
        "type": "?",
        "name": "getUILanguage"
      }
    ]
  },
  {
    "name": "chrome.idle",
    "shortName": "idle",
    "comment": "Use the <code>chrome.idle</code> API to detect when the machine's idle state changes.",
    "types": [
      {
        "type": "?",
        "name": "IdleState"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getAutoLockDelay"
      },
      {
        "type": "?",
        "name": "queryState"
      },
      {
        "type": "?",
        "name": "setDetectionInterval"
      }
    ]
  },
  {
    "name": "chrome.incognito",
    "shortName": "incognito",
    "comment": "Dummy namepsace for the incognito manifest key.",
    "types": [
      {
        "type": "?",
        "name": "IncognitoMode"
      }
    ],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.input",
    "shortName": "input",
    "comment": "",
    "types": [],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.input.ime",
    "shortName": "input.ime",
    "comment": "Use the <code>chrome.input.ime</code> API to implement a custom IME for Chrome OS. This allows your extension to handle keystrokes, set the composition, and manage the candidate window.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Strings for ChromeVox to announce.",
            "optional": true,
            "name": "announceString"
          },
          {
            "type": "reference",
            "referenceType": "AssistiveWindowType",
            "referenceLink": true,
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Sets true to show AssistiveWindow, sets false to hide.",
            "name": "visible"
          }
        ],
        "comment": "Properties of the assistive window.",
        "name": "AssistiveWindowProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "AutoCapitalizeType",
            "referenceLink": true,
            "comment": "The auto-capitalize type of the text field.",
            "name": "autoCapitalize"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the text field wants auto-complete.",
            "name": "autoComplete"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the text field wants auto-correct.",
            "name": "autoCorrect"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "This is used to specify targets of text field operations.  This ID becomes invalid as soon as onBlur is called.",
            "name": "contextID"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether text entered into the text field should be used to improve typing suggestions for the user.",
            "name": "shouldDoLearning"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the text field wants spell-check.",
            "name": "spellCheck"
          },
          {
            "type": "reference",
            "referenceType": "InputContextType",
            "referenceLink": true,
            "comment": "Type of value this text field edits, (Text, Number, URL, etc)",
            "name": "type"
          }
        ],
        "comment": "Describes an input Context",
        "name": "InputContext"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether or not the ALT key is pressed.",
            "optional": true,
            "name": "altKey"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether or not the ALTGR key is pressed.",
            "optional": true,
            "name": "altgrKey"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether or not the CAPS_LOCK is enabled.",
            "optional": true,
            "name": "capsLock"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the physical key being pressed. The value is not affected by current keyboard layout or modifier state.",
            "name": "code"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether or not the CTRL key is pressed.",
            "optional": true,
            "name": "ctrlKey"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The extension ID of the sender of this keyevent.",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value of the key being pressed",
            "name": "key"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The deprecated HTML keyCode, which is system- and implementation-dependent numerical code signifying the unmodified identifier associated with the key pressed.",
            "optional": true,
            "name": "keyCode"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "(Deprecated) The ID of the request. Use the <code>requestId</code> param from the <code>onKeyEvent</code> event instead.",
            "optional": true,
            "name": "requestId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether or not the SHIFT key is pressed.",
            "optional": true,
            "name": "shiftKey"
          },
          {
            "type": "reference",
            "referenceType": "KeyboardEventType",
            "referenceLink": true,
            "comment": "One of keyup or keydown.",
            "name": "type"
          }
        ],
        "comment": "See http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent",
        "name": "KeyboardEvent"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Indicates this item should be drawn with a check.",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Indicates this item is enabled.",
            "optional": true,
            "name": "enabled"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "String that will be passed to callbacks referencing this MenuItem.",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Text displayed in the menu for this item.",
            "optional": true,
            "name": "label"
          },
          {
            "type": "reference",
            "referenceType": "MenuItemStyle",
            "referenceLink": true,
            "comment": "The type of menu item.",
            "optional": true,
            "name": "style"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Indicates this item is visible.",
            "optional": true,
            "name": "visible"
          }
        ],
        "comment": "A menu item used by an input method to interact with the user from the language menu.",
        "name": "MenuItem"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "ID of the engine to use.",
            "name": "engineID"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "MenuItem",
              "referenceLink": true
            },
            "comment": "MenuItems to add or update. They will be added in the order they exist in the array.",
            "name": "items"
          }
        ],
        "name": "MenuParameters"
      },
      {
        "type": "?",
        "comment": "ID of buttons in assistive window.",
        "name": "AssistiveWindowButton"
      },
      {
        "type": "?",
        "comment": "Type of assistive window.",
        "name": "AssistiveWindowType"
      },
      {
        "type": "?",
        "comment": "The auto-capitalize type of the text field.",
        "name": "AutoCapitalizeType"
      },
      {
        "type": "?",
        "comment": "Type of value this text field edits, (Text, Number, URL, etc)",
        "name": "InputContextType"
      },
      {
        "type": "?",
        "name": "KeyboardEventType"
      },
      {
        "type": "?",
        "comment": "The type of menu item. Radio buttons between separators are considered grouped.",
        "name": "MenuItemStyle"
      },
      {
        "type": "?",
        "comment": "Which mouse buttons was clicked.",
        "name": "MouseButton"
      },
      {
        "type": "?",
        "comment": "The screen type under which the IME is activated.",
        "name": "ScreenType"
      },
      {
        "type": "?",
        "comment": "The type of the underline to modify this segment.",
        "name": "UnderlineStyle"
      },
      {
        "type": "?",
        "comment": "Where to display the candidate window. If set to 'cursor', the window follows the cursor. If set to 'composition', the window is locked to the beginning of the composition.",
        "name": "WindowPosition"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "clearComposition"
      },
      {
        "type": "?",
        "name": "commitText"
      },
      {
        "type": "?",
        "name": "deleteSurroundingText"
      },
      {
        "type": "?",
        "name": "hideInputView"
      },
      {
        "type": "?",
        "name": "keyEventHandled"
      },
      {
        "type": "?",
        "name": "sendKeyEvents"
      },
      {
        "type": "?",
        "name": "setAssistiveWindowButtonHighlighted"
      },
      {
        "type": "?",
        "name": "setAssistiveWindowProperties"
      },
      {
        "type": "?",
        "name": "setCandidateWindowProperties"
      },
      {
        "type": "?",
        "name": "setCandidates"
      },
      {
        "type": "?",
        "name": "setComposition"
      },
      {
        "type": "?",
        "name": "setCursorPosition"
      },
      {
        "type": "?",
        "name": "setMenuItems"
      },
      {
        "type": "?",
        "name": "updateMenuItems"
      }
    ]
  },
  {
    "name": "chrome.inputMethodPrivate",
    "shortName": "inputMethodPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Key of the app associated with this text field if any.",
            "optional": true,
            "name": "appKey"
          },
          {
            "type": "reference",
            "referenceType": "AutoCapitalizeType",
            "referenceLink": true,
            "comment": "The auto-capitalize type of the text field.",
            "name": "autoCapitalize"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the text field wants auto-complete.",
            "name": "autoComplete"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the text field wants auto-correct.",
            "name": "autoCorrect"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "This is used to specify targets of text field operations.  This ID becomes invalid as soon as onBlur is called.",
            "name": "contextID"
          },
          {
            "type": "reference",
            "referenceType": "FocusReason",
            "referenceLink": true,
            "comment": "How the text field was focused",
            "name": "focusReason"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the text field has ever been a password field.",
            "name": "hasBeenPassword"
          },
          {
            "type": "reference",
            "referenceType": "InputModeType",
            "referenceLink": true,
            "comment": "Type of keyboard to show for this field (Text, Number, URL, etc)",
            "name": "mode"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether text entered into the text field should be used to improve typing suggestions for the user.",
            "name": "shouldDoLearning"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the text field wants spell-check.",
            "name": "spellCheck"
          },
          {
            "type": "reference",
            "referenceType": "InputContextType",
            "referenceLink": true,
            "comment": "Type of value this text field edits, (Text, Number, URL, etc)",
            "name": "type"
          }
        ],
        "comment": "Describes an input Context",
        "name": "InputContext"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to enable auto completion.",
            "optional": true,
            "name": "enableCompletion"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to auto transform double spaces to type period.",
            "optional": true,
            "name": "enableDoubleSpacePeriod"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to enable gesture typing.",
            "optional": true,
            "name": "enableGestureTyping"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to enable word prediction.",
            "optional": true,
            "name": "enablePrediction"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to enable sound on keypress.",
            "optional": true,
            "name": "enableSoundOnKeypress"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether input one syllable at a time in korean input method.",
            "optional": true,
            "name": "koreanEnableSyllableInput"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The layout of korean keyboard.",
            "optional": true,
            "name": "koreanKeyboardLayout"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to show hangul candidates in korean input method.",
            "optional": true,
            "name": "koreanShowHangulCandidate"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The level of auto correction for physical keyboard (0: Off, 1: Modest, 2: Aggressive).",
            "optional": true,
            "name": "physicalKeyboardAutoCorrectionLevel"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to enable auto capitalization for physical keyboard.",
            "optional": true,
            "name": "physicalKeyboardEnableCapitalization"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to use Chinese punctuations in pinyin.",
            "optional": true,
            "name": "pinyinChinesePunctuation"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "User can use shortcuts to switch between Chinese and English quickly when using pinyin, this flag indicates whether the default language is Chinese.",
            "optional": true,
            "name": "pinyinDefaultChinese"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to enable fuzzy pinyin.",
            "optional": true,
            "name": "pinyinEnableFuzzy"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to enable using ','/'.' to page up/down the candidates in pinyin.",
            "optional": true,
            "name": "pinyinEnableLowerPaging"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to enable using '-'/'=' to page up/down the candidates in pinyin.",
            "optional": true,
            "name": "pinyinEnableUpperPaging"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to output full width letters and digits in pinyin.",
            "optional": true,
            "name": "pinyinFullWidthCharacter"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "an_ang"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "c_ch"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "en_eng"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "f_h"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "ian_iang"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "in_ing"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "k_g"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "l_n"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "r_l"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "s_sh"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "uan_uang"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "z_zh"
              }
            ],
            "comment": "The configuration of which fuzzy pairs are enable.",
            "optional": true,
            "name": "pinyinFuzzyConfig"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The level of auto correction for virtual keyboard (0: Off, 1: Modest, 2: Aggressive).",
            "optional": true,
            "name": "virtualKeyboardAutoCorrectionLevel"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether enable auto capitalization for virtual keyboard.",
            "optional": true,
            "name": "virtualKeyboardEnableCapitalization"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The xkb keyboard (system provided keyboard) layout.",
            "optional": true,
            "name": "xkbLayout"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The layout of zhuyin keyboard.",
            "optional": true,
            "name": "zhuyinKeyboardLayout"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The page size of zhuyin candidate page.",
            "optional": true,
            "name": "zhuyinPageSize"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The keys used to select candidates in zhuyin.",
            "optional": true,
            "name": "zhuyinSelectKeys"
          }
        ],
        "comment": "User preference settings for a specific input method. Japanese input methods are not included because they are managed separately by Mozc module.",
        "name": "InputMethodSettings"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Indicates this item should be drawn with a check.",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Indicates this item is enabled.",
            "optional": true,
            "name": "enabled"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "String that will be passed to callbacks referencing this MenuItem.",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Text displayed in the menu for this item.",
            "optional": true,
            "name": "label"
          },
          {
            "type": "reference",
            "referenceType": "MenuItemStyle",
            "referenceLink": true,
            "comment": "The type of menu item.",
            "optional": true,
            "name": "style"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Indicates this item is visible.",
            "optional": true,
            "name": "visible"
          }
        ],
        "comment": "A menu item used by an input method to interact with the user from the language menu.",
        "name": "MenuItem"
      },
      {
        "type": "?",
        "comment": "The auto-capitalize type of the text field.",
        "name": "AutoCapitalizeType"
      },
      {
        "type": "?",
        "comment": "Describes how the text field was focused",
        "name": "FocusReason"
      },
      {
        "type": "?",
        "comment": "Type of value this text field edits, (Text, Number, URL, etc)",
        "name": "InputContextType"
      },
      {
        "type": "?",
        "comment": "Type of keyboard to show for this text field, (Text, Number, URL, etc) set by mode property of input tag",
        "name": "InputModeType"
      },
      {
        "type": "?",
        "comment": "The type of menu item. Radio buttons between separators are considered grouped.",
        "name": "MenuItemStyle"
      },
      {
        "type": "?",
        "comment": "The type of the underline to modify a composition segment.",
        "name": "UnderlineStyle"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "addWordToDictionary"
      },
      {
        "type": "?",
        "name": "fetchAllDictionaryWords"
      },
      {
        "type": "?",
        "name": "finishComposingText"
      },
      {
        "type": "?",
        "name": "getAutocorrectCharacterBounds"
      },
      {
        "type": "?",
        "name": "getAutocorrectRange"
      },
      {
        "type": "?",
        "name": "getCompositionBounds"
      },
      {
        "type": "?",
        "name": "getCurrentInputMethod"
      },
      {
        "type": "?",
        "name": "getEncryptSyncEnabled"
      },
      {
        "type": "?",
        "name": "getInputMethodConfig"
      },
      {
        "type": "?",
        "name": "getInputMethods"
      },
      {
        "type": "?",
        "name": "getSettings"
      },
      {
        "type": "?",
        "name": "getSurroundingText"
      },
      {
        "type": "?",
        "name": "hideInputView"
      },
      {
        "type": "?",
        "name": "notifyImeMenuItemActivated"
      },
      {
        "type": "?",
        "name": "openOptionsPage"
      },
      {
        "type": "?",
        "name": "reset"
      },
      {
        "type": "?",
        "name": "setAutocorrectRange"
      },
      {
        "type": "?",
        "name": "setComposingRange"
      },
      {
        "type": "?",
        "name": "setCompositionRange"
      },
      {
        "type": "?",
        "name": "setCurrentInputMethod"
      },
      {
        "type": "?",
        "name": "setSelectionRange"
      },
      {
        "type": "?",
        "name": "setSettings"
      },
      {
        "type": "?",
        "name": "setXkbLayout"
      },
      {
        "type": "?",
        "name": "showInputView"
      }
    ]
  },
  {
    "name": "chrome.instanceID",
    "shortName": "instanceID",
    "comment": "Use <code>chrome.instanceID</code> to access the Instance ID service.",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "deleteID"
      },
      {
        "type": "?",
        "name": "deleteToken"
      },
      {
        "type": "?",
        "name": "getCreationTime"
      },
      {
        "type": "?",
        "name": "getID"
      },
      {
        "type": "?",
        "name": "getToken"
      }
    ]
  },
  {
    "name": "chrome.management",
    "shortName": "management",
    "comment": "The <code>chrome.management</code> API provides ways to manage the list of extensions/apps that are installed and running. It is particularly useful for extensions that <a href='override'>override</a> the built-in New Tab page.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The launch url (only present for apps).",
            "optional": true,
            "name": "appLaunchUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "LaunchType",
              "referenceLink": true
            },
            "comment": "The currently available launch types (only present for apps).",
            "optional": true,
            "name": "availableLaunchTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The description of this extension, app, or theme.",
            "name": "description"
          },
          {
            "type": "reference",
            "referenceType": "ExtensionDisabledReason",
            "referenceLink": true,
            "comment": "A reason the item is disabled.",
            "optional": true,
            "name": "disabledReason"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether it is currently enabled or disabled.",
            "name": "enabled"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL of the homepage of this extension, app, or theme.",
            "optional": true,
            "name": "homepageUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Returns a list of host based permissions.",
            "name": "hostPermissions"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "IconInfo",
              "referenceLink": true
            },
            "comment": "A list of icon information. Note that this just reflects what was declared in the manifest, and the actual image at that url may be larger or smaller than what was declared, so you might consider using explicit width and height attributes on img tags referencing these images. See the <a href='manifest/icons'>manifest documentation on icons</a> for more details.",
            "optional": true,
            "name": "icons"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The extension's unique identifier.",
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "ExtensionInstallType",
            "referenceLink": true,
            "comment": "How the extension was installed.",
            "name": "installType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if this is an app.",
            "name": "isApp"
          },
          {
            "type": "reference",
            "referenceType": "LaunchType",
            "referenceLink": true,
            "comment": "The app launch type (only present for apps).",
            "optional": true,
            "name": "launchType"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether this extension can be disabled or uninstalled by the user.",
            "name": "mayDisable"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether this extension can be enabled by the user. This is only returned for extensions which are not enabled.",
            "optional": true,
            "name": "mayEnable"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of this extension, app, or theme.",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the extension, app, or theme declares that it supports offline.",
            "name": "offlineEnabled"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The url for the item's options page, if it has one.",
            "name": "optionsUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Returns a list of API based permissions.",
            "name": "permissions"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A short version of the name of this extension, app, or theme.",
            "name": "shortName"
          },
          {
            "type": "reference",
            "referenceType": "ExtensionType",
            "referenceLink": true,
            "comment": "The type of this extension, app, or theme.",
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The update URL of this extension, app, or theme.",
            "optional": true,
            "name": "updateUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The <a href='manifest/version'>version</a> of this extension, app, or theme.",
            "name": "version"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The <a href='manifest/version#version_name'>version name</a> of this extension, app, or theme if the manifest specified one.",
            "optional": true,
            "name": "versionName"
          }
        ],
        "comment": "Information about an installed extension, app, or theme.",
        "name": "ExtensionInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A number representing the width and height of the icon. Likely values include (but are not limited to) 128, 48, 24, and 16.",
            "name": "size"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL for this icon image. To display a grayscale version of the icon (to indicate that an extension is disabled, for example), append <code>?grayscale=true</code> to the URL.",
            "name": "url"
          }
        ],
        "comment": "Information about an icon belonging to an extension, app, or theme.",
        "name": "IconInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether or not a confirm-uninstall dialog should prompt the user. Defaults to false for self uninstalls. If an extension uninstalls another extension, this parameter is ignored and the dialog is always shown.",
            "optional": true,
            "name": "showConfirmDialog"
          }
        ],
        "comment": "Information about an icon belonging to an extension, app, or theme.",
        "name": "UninstallOptions"
      },
      {
        "type": "?",
        "comment": "A reason the item is disabled.",
        "name": "ExtensionDisabledReason"
      },
      {
        "type": "?",
        "comment": "How the extension was installed. One of<br><var>admin</var>: The extension was installed because of an administrative policy,<br><var>development</var>: The extension was loaded unpacked in developer mode,<br><var>normal</var>: The extension was installed normally via a .crx file,<br><var>sideload</var>: The extension was installed by other software on the machine,<br><var>other</var>: The extension was installed by other means.",
        "name": "ExtensionInstallType"
      },
      {
        "type": "?",
        "comment": "The type of this extension, app, or theme.",
        "name": "ExtensionType"
      },
      {
        "type": "?",
        "comment": "These are all possible app launch types.",
        "name": "LaunchType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "canInstallReplacementAndroidApp"
      },
      {
        "type": "?",
        "name": "createAppShortcut"
      },
      {
        "type": "?",
        "name": "generateAppForLink"
      },
      {
        "type": "?",
        "name": "get"
      },
      {
        "type": "?",
        "name": "getAll"
      },
      {
        "type": "?",
        "name": "getPermissionWarningsById"
      },
      {
        "type": "?",
        "name": "getPermissionWarningsByManifest"
      },
      {
        "type": "?",
        "name": "getSelf"
      },
      {
        "type": "?",
        "name": "installReplacementAndroidApp"
      },
      {
        "type": "?",
        "name": "installReplacementWebApp"
      },
      {
        "type": "?",
        "name": "launchApp"
      },
      {
        "type": "?",
        "name": "setEnabled"
      },
      {
        "type": "?",
        "name": "setLaunchType"
      },
      {
        "type": "?",
        "name": "uninstall"
      },
      {
        "type": "?",
        "name": "uninstallSelf"
      }
    ]
  },
  {
    "name": "chrome.manifestTypes",
    "shortName": "manifestTypes",
    "comment": "Schemas for structured manifest entries",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "New value for the homepage.",
            "optional": true,
            "name": "homepage"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "intrinsic"
                },
                "optional": true,
                "name": "alternate_urls"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "encoding"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "favicon_url"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "image_url"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "image_url_post_params"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "name": "is_default"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "keyword"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "name"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "prepopulated_id"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "name": "search_url"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "search_url_post_params"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "suggest_url"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "optional": true,
                "name": "suggest_url_post_params"
              }
            ],
            "comment": "A search engine",
            "optional": true,
            "name": "search_provider"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "An array of length one containing a URL to be used as the startup page.",
            "optional": true,
            "name": "startup_pages"
          }
        ],
        "comment": "Chrome settings which can be overriden by an extension.",
        "name": "ChromeSettingsOverrides"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether configuring via <code>onConfigureRequested</code> is supported. By default: <code>false</code>.",
            "optional": true,
            "name": "configurable"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether multiple (more than one) mounted file systems are supported. By default: <code>false</code>.",
            "optional": true,
            "name": "multiple_mounts"
          },
          {
            "type": "reference",
            "referenceType": "FileSystemProviderSource",
            "referenceLink": true,
            "comment": "Source of data for mounted file systems.",
            "name": "source"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether setting watchers and notifying about changes is supported. By default: <code>false</code>.",
            "optional": true,
            "name": "watchable"
          }
        ],
        "comment": "Represents capabilities of a providing extension.",
        "name": "FileSystemProviderCapabilities"
      },
      {
        "type": "?",
        "comment": "For <code>\"file\"</code> the source is a file passed via <code>onLaunched</code> event. For <code>\"device\"</code> contents are fetched from an external device (eg. plugged via USB), without using <code>file_handlers</code>. Finally, for <code>\"network\"</code> source, contents should be fetched via network.",
        "name": "FileSystemProviderSource"
      }
    ],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.mediaPlayerPrivate",
    "shortName": "mediaPlayerPrivate",
    "comment": "",
    "types": [],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.metricsPrivate",
    "shortName": "metricsPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HistogramBucket",
              "referenceLink": true
            },
            "comment": "Buckets containing samples.",
            "name": "buckets"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Sum of the all entries.",
            "name": "sum"
          }
        ],
        "name": "Histogram"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Number of samples stored in this bucket.",
            "name": "count"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Exclusive maximum value for samples stored this bucket.",
            "name": "max"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Minimum sample value that can be stored in this bucket (i.e. inclusive).",
            "name": "min"
          }
        ],
        "name": "HistogramBucket"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The number of buckets to use when separating the recorded values.",
            "name": "buckets"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The maximum sample value to be recoded.",
            "name": "max"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A unique name within the extension for the metric.",
            "name": "metricName"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The minimum sample value to be recoded.  Must be greater than zero.",
            "name": "min"
          },
          {
            "type": "reference",
            "referenceType": "MetricTypeType",
            "referenceLink": true,
            "name": "type"
          }
        ],
        "comment": "Describes the type of metric that is to be collected.",
        "name": "MetricType"
      },
      {
        "type": "?",
        "comment": "The type of metric, such as 'histogram-log' or 'histogram-linear'.",
        "name": "MetricTypeType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getFieldTrial"
      },
      {
        "type": "?",
        "name": "getHistogram"
      },
      {
        "type": "?",
        "name": "getIsCrashReportingEnabled"
      },
      {
        "type": "?",
        "name": "getVariationParams"
      },
      {
        "type": "?",
        "name": "recordBoolean"
      },
      {
        "type": "?",
        "name": "recordCount"
      },
      {
        "type": "?",
        "name": "recordEnumerationValue"
      },
      {
        "type": "?",
        "name": "recordLongTime"
      },
      {
        "type": "?",
        "name": "recordMediumCount"
      },
      {
        "type": "?",
        "name": "recordMediumTime"
      },
      {
        "type": "?",
        "name": "recordPercentage"
      },
      {
        "type": "?",
        "name": "recordSmallCount"
      },
      {
        "type": "?",
        "name": "recordSparseHashable"
      },
      {
        "type": "?",
        "name": "recordSparseValue"
      },
      {
        "type": "?",
        "name": "recordTime"
      },
      {
        "type": "?",
        "name": "recordUserAction"
      },
      {
        "type": "?",
        "name": "recordValue"
      }
    ]
  },
  {
    "name": "chrome.omnibox",
    "shortName": "omnibox",
    "comment": "The omnibox API allows you to register a keyword with Google Chrome's address bar, which is also known as the omnibox.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The text that is displayed in the URL dropdown. Can contain XML-style markup for styling. The supported tags are 'url' (for a literal URL), 'match' (for highlighting text that matched what the user's query), and 'dim' (for dim helper text). The styles can be nested, eg. <dim><match>dimmed match</match></dim>.",
            "name": "description"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "MatchClassification",
              "referenceLink": true
            },
            "comment": "An array of style ranges for the description, as provided by the extension.",
            "optional": true,
            "name": "descriptionStyles"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "MatchClassificationRaw",
              "referenceLink": true
            },
            "comment": "An array of style ranges for the description, as provided by ToValue().",
            "optional": true,
            "name": "descriptionStylesRaw"
          }
        ],
        "comment": "A suggest result.",
        "name": "DefaultSuggestResult"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "length"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "name": "offset"
          },
          {
            "type": "reference",
            "referenceType": "DescriptionStyleType",
            "referenceLink": true,
            "comment": "The style type",
            "name": "type"
          }
        ],
        "comment": "The style ranges for the description, as provided by the extension.",
        "name": "MatchClassification"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "name": "offset"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "name": "type"
          }
        ],
        "comment": "The style ranges for the description, as provided by ToValue().",
        "name": "MatchClassificationRaw"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The text that is put into the URL bar, and that is sent to the extension when the user chooses this entry.",
            "name": "content"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the suggest result can be deleted by the user.",
            "optional": true,
            "name": "deletable"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The text that is displayed in the URL dropdown. Can contain XML-style markup for styling. The supported tags are 'url' (for a literal URL), 'match' (for highlighting text that matched what the user's query), and 'dim' (for dim helper text). The styles can be nested, eg. <dim><match>dimmed match</match></dim>. You must escape the five predefined entities to display them as text: stackoverflow.com/a/1091953/89484",
            "name": "description"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "MatchClassification",
              "referenceLink": true
            },
            "comment": "An array of style ranges for the description, as provided by the extension.",
            "optional": true,
            "name": "descriptionStyles"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "MatchClassificationRaw",
              "referenceLink": true
            },
            "comment": "An array of style ranges for the description, as provided by ToValue().",
            "optional": true,
            "name": "descriptionStylesRaw"
          }
        ],
        "comment": "A suggest result.",
        "name": "SuggestResult"
      },
      {
        "type": "?",
        "comment": "The style type.",
        "name": "DescriptionStyleType"
      },
      {
        "type": "?",
        "comment": "The window disposition for the omnibox query. This is the recommended context to display results. For example, if the omnibox command is to navigate to a certain URL, a disposition of 'newForegroundTab' means the navigation should take place in a new selected tab.",
        "name": "OnInputEnteredDisposition"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "sendSuggestions"
      },
      {
        "type": "?",
        "name": "setDefaultSuggestion"
      }
    ]
  },
  {
    "name": "chrome.pageAction",
    "shortName": "pageAction",
    "comment": "Use the <code>chrome.pageAction</code> API to put icons in the main Google Chrome toolbar, to the right of the address bar. Page actions represent actions that can be taken on the current page, but that aren't applicable to all pages. Page actions appear grayed out when inactive.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the tab to query state for. If no tab is specified, the non-tab-specific state is returned.",
            "optional": true,
            "name": "tabId"
          }
        ],
        "name": "TabDetails"
      },
      {
        "type": "reference",
        "referenceType": "ImageData",
        "referenceLink": true,
        "comment": "Pixel data for an image. Must be an ImageData object (for example, from a <code>canvas</code> element).",
        "name": "ImageDataType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getPopup"
      },
      {
        "type": "?",
        "name": "getTitle"
      },
      {
        "type": "?",
        "name": "hide"
      },
      {
        "type": "?",
        "name": "setIcon"
      },
      {
        "type": "?",
        "name": "setPopup"
      },
      {
        "type": "?",
        "name": "setTitle"
      },
      {
        "type": "?",
        "name": "show"
      }
    ]
  },
  {
    "name": "chrome.pageCapture",
    "shortName": "pageCapture",
    "comment": "Use the <code>chrome.pageCapture</code> API to save a tab as MHTML.",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "saveAsMHTML"
      }
    ]
  },
  {
    "name": "chrome.permissions",
    "shortName": "permissions",
    "comment": "Use the <code>chrome.permissions</code> API to request <a href='permissions#manifest'>declared optional permissions</a> at run time rather than install time, so users understand why the permissions are needed and grant only those that are necessary.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "The list of host permissions, including those specified in the <code>optional_permissions</code> or <code>permissions</code> keys in the manifest, and those associated with <a href='content_scripts'>Content Scripts</a>.",
            "optional": true,
            "name": "origins"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "List of named permissions (does not include hosts or origins).",
            "optional": true,
            "name": "permissions"
          }
        ],
        "name": "Permissions"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "contains"
      },
      {
        "type": "?",
        "name": "getAll"
      },
      {
        "type": "?",
        "name": "remove"
      },
      {
        "type": "?",
        "name": "request"
      }
    ]
  },
  {
    "name": "chrome.privacy",
    "shortName": "privacy",
    "comment": "Use the <code>chrome.privacy</code> API to control usage of the features in Chrome that can affect a user's privacy. This API relies on the <a href='types#ChromeSetting'>ChromeSetting prototype of the type API</a> for getting and setting Chrome's configuration.",
    "types": [
      {
        "type": "?",
        "comment": "The IP handling policy of WebRTC.",
        "name": "IPHandlingPolicy"
      }
    ],
    "properties": [
      {
        "type": "object",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "networkPredictionEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "webRTCIPHandlingPolicy"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "webRTCMultipleRoutesEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "webRTCNonProxiedUdpEnabled"
          }
        ],
        "comment": "Settings that influence Chrome's handling of network connections in general.",
        "name": "network"
      },
      {
        "type": "object",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "alternateErrorPagesEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "autofillAddressEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "autofillCreditCardEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "autofillEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "passwordSavingEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "safeBrowsingEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "safeBrowsingExtendedReportingEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "searchSuggestEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "spellingServiceEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "translationServiceEnabled"
          }
        ],
        "comment": "Settings that enable or disable features that require third-party network services provided by Google and your default search provider.",
        "name": "services"
      },
      {
        "type": "object",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "doNotTrackEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "hyperlinkAuditingEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "protectedContentEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "referrersEnabled"
          },
          {
            "type": "reference",
            "referenceType": "ChromeSetting",
            "referenceLink": true,
            "name": "thirdPartyCookiesAllowed"
          }
        ],
        "comment": "Settings that determine what information Chrome makes available to websites.",
        "name": "websites"
      }
    ],
    "methods": []
  },
  {
    "name": "chrome.proxy",
    "shortName": "proxy",
    "comment": "Use the <code>chrome.proxy</code> API to manage Chrome's proxy settings. This API relies on the <a href='types#ChromeSetting'>ChromeSetting prototype of the type API</a> for getting and setting the proxy configuration.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A PAC script.",
            "optional": true,
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If true, an invalid PAC script will prevent the network stack from falling back to direct connections. Defaults to false.",
            "optional": true,
            "name": "mandatory"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "URL of the PAC file to be used.",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "An object holding proxy auto-config information. Exactly one of the fields should be non-empty.",
        "name": "PacScript"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Mode",
            "referenceLink": true,
            "comment": "'direct' = Never use a proxy<br>'auto_detect' = Auto detect proxy settings<br>'pac_script' = Use specified PAC script<br>'fixed_servers' = Manually specify proxy servers<br>'system' = Use system proxy settings",
            "name": "mode"
          },
          {
            "type": "reference",
            "referenceType": "PacScript",
            "referenceLink": true,
            "comment": "The proxy auto-config (PAC) script for this configuration. Use this for 'pac_script' mode.",
            "optional": true,
            "name": "pacScript"
          },
          {
            "type": "reference",
            "referenceType": "ProxyRules",
            "referenceLink": true,
            "comment": "The proxy rules describing this configuration. Use this for 'fixed_servers' mode.",
            "optional": true,
            "name": "rules"
          }
        ],
        "comment": "An object encapsulating a complete proxy configuration.",
        "name": "ProxyConfig"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "List of servers to connect to without a proxy server.",
            "optional": true,
            "name": "bypassList"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": true,
            "comment": "The proxy server to be used for everthing else or if any of the specific proxyFor... is not specified.",
            "optional": true,
            "name": "fallbackProxy"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": true,
            "comment": "The proxy server to be used for FTP requests.",
            "optional": true,
            "name": "proxyForFtp"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": true,
            "comment": "The proxy server to be used for HTTP requests.",
            "optional": true,
            "name": "proxyForHttp"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": true,
            "comment": "The proxy server to be used for HTTPS requests.",
            "optional": true,
            "name": "proxyForHttps"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": true,
            "comment": "The proxy server to be used for all per-URL requests (that is http, https, and ftp).",
            "optional": true,
            "name": "singleProxy"
          }
        ],
        "comment": "An object encapsulating the set of proxy rules for all protocols. Use either 'singleProxy' or (a subset of) 'proxyForHttp', 'proxyForHttps', 'proxyForFtp' and 'fallbackProxy'.",
        "name": "ProxyRules"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The hostname or IP address of the proxy server. Hostnames must be in ASCII (in Punycode format). IDNA is not supported, yet.",
            "name": "host"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The port of the proxy server. Defaults to a port that depends on the scheme.",
            "optional": true,
            "name": "port"
          },
          {
            "type": "reference",
            "referenceType": "Scheme",
            "referenceLink": true,
            "comment": "The scheme (protocol) of the proxy server itself. Defaults to 'http'.",
            "optional": true,
            "name": "scheme"
          }
        ],
        "comment": "An object encapsulating a single proxy server's specification.",
        "name": "ProxyServer"
      },
      {
        "type": "?",
        "name": "Mode"
      },
      {
        "type": "?",
        "name": "Scheme"
      }
    ],
    "properties": [
      {
        "type": "reference",
        "referenceType": "ChromeSetting",
        "referenceLink": true,
        "comment": "Proxy settings to be used. The value of this setting is a ProxyConfig object.",
        "name": "settings"
      }
    ],
    "methods": []
  },
  {
    "name": "chrome.runtime",
    "shortName": "runtime",
    "comment": "Use the <code>chrome.runtime</code> API to retrieve the background page, return details about the manifest, and listen for and respond to events in the app or extension lifecycle. You can also use this API to convert the relative path of URLs to fully-qualified URLs.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The <a href='webNavigation#frame_ids'>frame</a> that opened the connection. 0 for top-level frames, positive for child frames. This will only be set when <code>tab</code> is set.",
            "optional": true,
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The guest process id of the requesting webview, if available. Only available for component extensions.",
            "optional": true,
            "name": "guestProcessId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The guest render frame routing id of the requesting webview, if available. Only available for component extensions.",
            "optional": true,
            "name": "guestRenderFrameRoutingId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the extension or app that opened the connection, if any.",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the native application that opened the connection, if any.",
            "optional": true,
            "name": "nativeApplication"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The origin of the page or frame that opened the connection. It can vary from the url property (e.g., about:blank) or can be opaque (e.g., sandboxed iframes). This is useful for identifying if the origin can be trusted if we can't immediately tell from the URL.",
            "optional": true,
            "name": "origin"
          },
          {
            "type": "reference",
            "referenceType": "Tab",
            "referenceLink": true,
            "comment": "The $(ref:tabs.Tab) which opened the connection, if any. This property will <strong>only</strong> be present when the connection was opened from a tab (including content scripts), and <strong>only</strong> if the receiver is an extension, not an app.",
            "optional": true,
            "name": "tab"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The TLS channel ID of the page or frame that opened the connection, if requested by the extension or app, and if available.",
            "optional": true,
            "name": "tlsChannelId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL of the page or frame that opened the connection. If the sender is in an iframe, it will be iframe's URL not the URL of the page which hosts it.",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "An object containing information about the script context that sent a message or request.",
        "name": "MessageSender"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "PlatformArch",
            "referenceLink": true,
            "comment": "The machine's processor architecture.",
            "name": "arch"
          },
          {
            "type": "reference",
            "referenceType": "PlatformNaclArch",
            "referenceLink": true,
            "comment": "The native client architecture. This may be different from arch on some platforms.",
            "name": "nacl_arch"
          },
          {
            "type": "reference",
            "referenceType": "PlatformOs",
            "referenceLink": true,
            "comment": "The operating system chrome is running on.",
            "name": "os"
          }
        ],
        "comment": "An object containing information about the current platform.",
        "name": "PlatformInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Immediately disconnect the port. Calling <code>disconnect()</code> on an already-disconnected port has no effect. When a port is disconnected, no new events will be dispatched to this port.",
            "name": "disconnect"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the port, as specified in the call to $(ref:runtime.connect).",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "Event",
            "referenceLink": true,
            "comment": "Fired when the port is disconnected from the other end(s). $(ref:runtime.lastError) may be set if the port was disconnected by an error. If the port is closed via $(ref:Port.disconnect disconnect), then this event is <em>only</em> fired on the other end. This event is fired at most once (see also <a href=\"messaging#port-lifetime\">Port lifetime</a>). The first and only parameter to the event handler is this disconnected port.",
            "name": "onDisconnect"
          },
          {
            "type": "reference",
            "referenceType": "Event",
            "referenceLink": true,
            "comment": "This event is fired when $(ref:Port.postMessage postMessage) is called by the other end of the port. The first parameter is the message, the second parameter is the port that received the message.",
            "name": "onMessage"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Send a message to the other end of the port. If the port is disconnected, an error is thrown.",
            "name": "postMessage"
          },
          {
            "type": "reference",
            "referenceType": "MessageSender",
            "referenceLink": true,
            "comment": "This property will <b>only</b> be present on ports passed to $(ref:runtime.onConnect onConnect) / $(ref:runtime.onConnectExternal onConnectExternal) / $(ref:runtime.onConnectExternal onConnectNative) listeners.",
            "optional": true,
            "name": "sender"
          }
        ],
        "comment": "An object which allows two way communication with other pages. See <a href=\"messaging#connect\">Long-lived connections</a> for more information.",
        "name": "Port"
      },
      {
        "type": "?",
        "comment": "The reason that this event is being dispatched.",
        "name": "OnInstalledReason"
      },
      {
        "type": "?",
        "comment": "The reason that the event is being dispatched. 'app_update' is used when the restart is needed because the application is updated to a newer version. 'os_update' is used when the restart is needed because the browser/OS is updated to a newer version. 'periodic' is used when the system runs for more than the permitted uptime set in the enterprise policy.",
        "name": "OnRestartRequiredReason"
      },
      {
        "type": "?",
        "comment": "The machine's processor architecture.",
        "name": "PlatformArch"
      },
      {
        "type": "?",
        "comment": "The native client architecture. This may be different from arch on some platforms.",
        "name": "PlatformNaclArch"
      },
      {
        "type": "?",
        "comment": "The operating system chrome is running on.",
        "name": "PlatformOs"
      },
      {
        "type": "?",
        "comment": "Result of the update check.",
        "name": "RequestUpdateCheckStatus"
      },
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "The ID of the extension/app.",
        "name": "id"
      },
      {
        "type": "?",
        "comment": "This will be defined during an API method callback if there was an error",
        "name": "lastError"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "connect"
      },
      {
        "type": "?",
        "name": "connectNative"
      },
      {
        "type": "?",
        "name": "getBackgroundPage"
      },
      {
        "type": "?",
        "name": "getManifest"
      },
      {
        "type": "?",
        "name": "getPackageDirectoryEntry"
      },
      {
        "type": "?",
        "name": "getPlatformInfo"
      },
      {
        "type": "?",
        "name": "getURL"
      },
      {
        "type": "?",
        "name": "openOptionsPage"
      },
      {
        "type": "?",
        "name": "reload"
      },
      {
        "type": "?",
        "name": "requestUpdateCheck"
      },
      {
        "type": "?",
        "name": "restart"
      },
      {
        "type": "?",
        "name": "restartAfterDelay"
      },
      {
        "type": "?",
        "name": "sendMessage"
      },
      {
        "type": "?",
        "name": "sendNativeMessage"
      },
      {
        "type": "?",
        "name": "setUninstallURL"
      }
    ]
  },
  {
    "name": "chrome.sessions",
    "shortName": "sessions",
    "comment": "Use the <code>chrome.sessions</code> API to query and restore tabs and windows from a browsing session.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the foreign device.",
            "name": "deviceName"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "name": "info"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Session",
              "referenceLink": true
            },
            "comment": "A list of open window sessions for the foreign device, sorted from most recently to least recently modified session.",
            "name": "sessions"
          }
        ],
        "name": "Device"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The maximum number of entries to be fetched in the requested list. Omit this parameter to fetch the maximum number of entries ($(ref:sessions.MAX_SESSION_RESULTS)).",
            "optional": true,
            "name": "maxResults"
          }
        ],
        "name": "Filter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The time when the window or tab was closed or modified, represented in milliseconds since the epoch.",
            "name": "lastModified"
          },
          {
            "type": "reference",
            "referenceType": "Tab",
            "referenceLink": true,
            "comment": "The $(ref:tabs.Tab), if this entry describes a tab. Either this or $(ref:sessions.Session.window) will be set.",
            "optional": true,
            "name": "tab"
          },
          {
            "type": "reference",
            "referenceType": "Window",
            "referenceLink": true,
            "comment": "The $(ref:windows.Window), if this entry describes a window. Either this or $(ref:sessions.Session.tab) will be set.",
            "optional": true,
            "name": "window"
          }
        ],
        "name": "Session"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "The maximum number of $(ref:sessions.Session) that will be included in a requested list.",
        "name": "MAX_SESSION_RESULTS"
      }
    ],
    "methods": [
      {
        "type": "?",
        "name": "getDevices"
      },
      {
        "type": "?",
        "name": "getRecentlyClosed"
      },
      {
        "type": "?",
        "name": "restore"
      }
    ]
  },
  {
    "name": "chrome.storage",
    "shortName": "storage",
    "comment": "Use the <code>chrome.storage</code> API to store, retrieve, and track changes to user data.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Removes all items from storage.",
            "name": "clear"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Gets one or more items from storage.",
            "name": "get"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Gets the amount of space (in bytes) being used by one or more items.",
            "name": "getBytesInUse"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Removes one or more items from storage.",
            "name": "remove"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Sets multiple items.",
            "name": "set"
          }
        ],
        "name": "StorageArea"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The new value of the item, if there is a new value.",
            "optional": true,
            "name": "newValue"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The old value of the item, if there was an old value.",
            "optional": true,
            "name": "oldValue"
          }
        ],
        "name": "StorageChange"
      }
    ],
    "properties": [
      {
        "type": "reference",
        "referenceType": "StorageArea",
        "referenceLink": true,
        "comment": "Items in the <code>local</code> storage area are local to each machine.",
        "name": "local"
      },
      {
        "type": "reference",
        "referenceType": "StorageArea",
        "referenceLink": true,
        "comment": "Items in the <code>managed</code> storage area are set by the domain administrator, and are read-only for the extension; trying to modify this namespace results in an error.",
        "name": "managed"
      },
      {
        "type": "reference",
        "referenceType": "StorageArea",
        "referenceLink": true,
        "comment": "Items in the <code>sync</code> storage area are synced using Chrome Sync.",
        "name": "sync"
      }
    ],
    "methods": []
  },
  {
    "name": "chrome.systemPrivate",
    "shortName": "systemPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Value between 0 and 1 describing the progress of system update download.  This value will be set to 0 when |state| is NotAvailable, 1 when NeedRestart.",
            "name": "downloadProgress"
          },
          {
            "type": "reference",
            "referenceType": "UpdateStatusState",
            "referenceLink": true,
            "comment": "State of system update.",
            "name": "state"
          }
        ],
        "comment": "Information about the system update.",
        "name": "UpdateStatus"
      },
      {
        "type": "?",
        "comment": "Exposes whether the incognito mode is available to windows. One of 'enabled', 'disabled' (user cannot browse pages in Incognito mode), 'forced' (all pages/sessions are forced into Incognito mode).",
        "name": "GetIncognitoModeAvailabilityValue"
      },
      {
        "type": "?",
        "comment": "State of system update.  NotAvailable when there is no available update or the update system is in error state, Updating when a system update is in progress, NeedRestart when a system update is finished and restart is needed.",
        "name": "UpdateStatusState"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getApiKey"
      },
      {
        "type": "?",
        "name": "getIncognitoModeAvailability"
      },
      {
        "type": "?",
        "name": "getUpdateStatus"
      }
    ]
  },
  {
    "name": "chrome.tabs",
    "shortName": "tabs",
    "comment": "Use the <code>chrome.tabs</code> API to interact with the browser's tab system. You can use this API to create, modify, and rearrange tabs in the browser.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the extension that changed the muted state. Not set if an extension was not the reason the muted state last changed.",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab is muted (prevented from playing sound). The tab may be muted even if it has not played or is not currently playing sound. Equivalent to whether the 'muted' audio indicator is showing.",
            "name": "muted"
          },
          {
            "type": "reference",
            "referenceType": "MutedInfoReason",
            "referenceLink": true,
            "comment": "The reason the tab was muted or unmuted. Not set if the tab's mute state has never been changed.",
            "optional": true,
            "name": "reason"
          }
        ],
        "comment": "The tab's muted state and the reason for the last state change.",
        "name": "MutedInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab is active in its window. Does not necessarily mean the window is focused.",
            "name": "active"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab has produced sound over the past couple of seconds (but it might not be heard if also muted). Equivalent to whether the 'speaker audio' indicator is showing.",
            "optional": true,
            "name": "audible"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab can be discarded automatically by the browser when resources are low.",
            "name": "autoDiscardable"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab is discarded. A discarded tab is one whose content has been unloaded from memory, but is still visible in the tab strip. Its content is reloaded the next time it is activated.",
            "name": "discarded"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL of the tab's favicon. This property is only present if the extension's manifest includes the <code>\"tabs\"</code> permission. It may also be an empty string if the tab is loading.",
            "optional": true,
            "name": "favIconUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the group that the tab belongs to.",
            "name": "groupId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The height of the tab in pixels.",
            "optional": true,
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab is highlighted.",
            "name": "highlighted"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the tab. Tab IDs are unique within a browser session. Under some circumstances a tab may not be assigned an ID; for example, when querying foreign tabs using the $(ref:sessions) API, in which case a session ID may be present. Tab ID can also be set to <code>chrome.tabs.TAB_ID_NONE</code> for apps and devtools windows.",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab is in an incognito window.",
            "name": "incognito"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The zero-based index of the tab within its window.",
            "name": "index"
          },
          {
            "type": "reference",
            "referenceType": "MutedInfo",
            "referenceLink": true,
            "comment": "The tab's muted state and the reason for the last state change.",
            "optional": true,
            "name": "mutedInfo"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the tab that opened this tab, if any. This property is only present if the opener tab still exists.",
            "optional": true,
            "name": "openerTabId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL the tab is navigating to, before it has committed. This property is only present if the extension's manifest includes the <code>\"tabs\"</code> permission and there is a pending navigation.",
            "optional": true,
            "name": "pendingUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab is pinned.",
            "name": "pinned"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the tab is selected.",
            "name": "selected"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The session ID used to uniquely identify a tab obtained from the $(ref:sessions) API.",
            "optional": true,
            "name": "sessionId"
          },
          {
            "type": "reference",
            "referenceType": "TabStatus",
            "referenceLink": true,
            "comment": "The tab's loading status.",
            "optional": true,
            "name": "status"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The title of the tab. This property is only present if the extension's manifest includes the <code>\"tabs\"</code> permission.",
            "optional": true,
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The last committed URL of the main frame of the tab. This property is only present if the extension's manifest includes the <code>\"tabs\"</code> permission and may be an empty string if the tab has not yet committed. See also $(ref:Tab.pendingUrl).",
            "optional": true,
            "name": "url"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The width of the tab in pixels.",
            "optional": true,
            "name": "width"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the window that contains the tab.",
            "name": "windowId"
          }
        ],
        "name": "Tab"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Used to return the default zoom level for the current tab in calls to tabs.getZoomSettings.",
            "optional": true,
            "name": "defaultZoomFactor"
          },
          {
            "type": "reference",
            "referenceType": "ZoomSettingsMode",
            "referenceLink": true,
            "comment": "Defines how zoom changes are handled, i.e., which entity is responsible for the actual scaling of the page; defaults to <code>automatic</code>.",
            "optional": true,
            "name": "mode"
          },
          {
            "type": "reference",
            "referenceType": "ZoomSettingsScope",
            "referenceLink": true,
            "comment": "Defines whether zoom changes persist for the page's origin, or only take effect in this tab; defaults to <code>per-origin</code> when in <code>automatic</code> mode, and <code>per-tab</code> otherwise.",
            "optional": true,
            "name": "scope"
          }
        ],
        "comment": "Defines how zoom changes in a tab are handled and at what scope.",
        "name": "ZoomSettings"
      },
      {
        "type": "?",
        "comment": "An event that caused a muted state change.",
        "name": "MutedInfoReason"
      },
      {
        "type": "?",
        "comment": "The tab's loading status.",
        "name": "TabStatus"
      },
      {
        "type": "?",
        "comment": "The type of window.",
        "name": "WindowType"
      },
      {
        "type": "?",
        "comment": "Defines how zoom changes are handled, i.e., which entity is responsible for the actual scaling of the page; defaults to <code>automatic</code>.",
        "name": "ZoomSettingsMode"
      },
      {
        "type": "?",
        "comment": "Defines whether zoom changes persist for the page's origin, or only take effect in this tab; defaults to <code>per-origin</code> when in <code>automatic</code> mode, and <code>per-tab</code> otherwise.",
        "name": "ZoomSettingsScope"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "An ID that represents the absence of a browser tab.",
        "name": "TAB_ID_NONE"
      }
    ],
    "methods": [
      {
        "type": "?",
        "name": "captureVisibleTab"
      },
      {
        "type": "?",
        "name": "connect"
      },
      {
        "type": "?",
        "name": "create"
      },
      {
        "type": "?",
        "name": "detectLanguage"
      },
      {
        "type": "?",
        "name": "discard"
      },
      {
        "type": "?",
        "name": "duplicate"
      },
      {
        "type": "?",
        "name": "executeScript"
      },
      {
        "type": "?",
        "name": "get"
      },
      {
        "type": "?",
        "name": "getAllInWindow"
      },
      {
        "type": "?",
        "name": "getCurrent"
      },
      {
        "type": "?",
        "name": "getSelected"
      },
      {
        "type": "?",
        "name": "getZoom"
      },
      {
        "type": "?",
        "name": "getZoomSettings"
      },
      {
        "type": "?",
        "name": "goBack"
      },
      {
        "type": "?",
        "name": "goForward"
      },
      {
        "type": "?",
        "name": "group"
      },
      {
        "type": "?",
        "name": "highlight"
      },
      {
        "type": "?",
        "name": "insertCSS"
      },
      {
        "type": "?",
        "name": "move"
      },
      {
        "type": "?",
        "name": "query"
      },
      {
        "type": "?",
        "name": "reload"
      },
      {
        "type": "?",
        "name": "remove"
      },
      {
        "type": "?",
        "name": "removeCSS"
      },
      {
        "type": "?",
        "name": "sendMessage"
      },
      {
        "type": "?",
        "name": "sendRequest"
      },
      {
        "type": "?",
        "name": "setZoom"
      },
      {
        "type": "?",
        "name": "setZoomSettings"
      },
      {
        "type": "?",
        "name": "ungroup"
      },
      {
        "type": "?",
        "name": "update"
      }
    ]
  },
  {
    "name": "chrome.terminalPrivate",
    "shortName": "terminalPrivate",
    "comment": "",
    "types": [
      {
        "type": "?",
        "comment": "Type of the output stream from which output came. When process exits, output type will be set to exit",
        "name": "OutputType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "ackOutput"
      },
      {
        "type": "?",
        "name": "closeTerminalProcess"
      },
      {
        "type": "?",
        "name": "getA11yStatus"
      },
      {
        "type": "?",
        "name": "getSettings"
      },
      {
        "type": "?",
        "name": "onTerminalResize"
      },
      {
        "type": "?",
        "name": "openOptionsPage"
      },
      {
        "type": "?",
        "name": "openTerminalProcess"
      },
      {
        "type": "?",
        "name": "openVmshellProcess"
      },
      {
        "type": "?",
        "name": "openWindow"
      },
      {
        "type": "?",
        "name": "sendInput"
      },
      {
        "type": "?",
        "name": "setSettings"
      }
    ]
  },
  {
    "name": "chrome.test",
    "shortName": "test",
    "comment": "",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "assertEq"
      },
      {
        "type": "?",
        "name": "assertFalse"
      },
      {
        "type": "?",
        "name": "assertLastError"
      },
      {
        "type": "?",
        "name": "assertNoLastError"
      },
      {
        "type": "?",
        "name": "assertThrows"
      },
      {
        "type": "?",
        "name": "assertTrue"
      },
      {
        "type": "?",
        "name": "callback"
      },
      {
        "type": "?",
        "name": "callbackAdded"
      },
      {
        "type": "?",
        "name": "callbackFail"
      },
      {
        "type": "?",
        "name": "callbackPass"
      },
      {
        "type": "?",
        "name": "checkDeepEq"
      },
      {
        "type": "?",
        "name": "fail"
      },
      {
        "type": "?",
        "name": "getApiDefinitions"
      },
      {
        "type": "?",
        "name": "getApiFeatures"
      },
      {
        "type": "?",
        "name": "getConfig"
      },
      {
        "type": "?",
        "name": "getModuleSystem"
      },
      {
        "type": "?",
        "name": "getWakeEventPage"
      },
      {
        "type": "?",
        "name": "isProcessingUserGesture"
      },
      {
        "type": "?",
        "name": "listenForever"
      },
      {
        "type": "?",
        "name": "listenOnce"
      },
      {
        "type": "?",
        "name": "log"
      },
      {
        "type": "?",
        "name": "notifyFail"
      },
      {
        "type": "?",
        "name": "notifyPass"
      },
      {
        "type": "?",
        "name": "runTests"
      },
      {
        "type": "?",
        "name": "runWithUserGesture"
      },
      {
        "type": "?",
        "name": "sendMessage"
      },
      {
        "type": "?",
        "name": "setExceptionHandler"
      },
      {
        "type": "?",
        "name": "succeed"
      },
      {
        "type": "?",
        "name": "waitForRoundTrip"
      }
    ]
  },
  {
    "name": "chrome.topSites",
    "shortName": "topSites",
    "comment": "Use the <code>chrome.topSites</code> API to access the top sites (i.e. most visited sites) that are displayed on the new tab page. These do not include shortcuts customized by the user.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The title of the page",
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The most visited URL.",
            "name": "url"
          }
        ],
        "comment": "An object encapsulating a most visited URL, such as the default shortcuts on the new tab page.",
        "name": "MostVisitedURL"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "get"
      }
    ]
  },
  {
    "name": "chrome.tts",
    "shortName": "tts",
    "comment": "Use the <code>chrome.tts</code> API to play synthesized text-to-speech (TTS). See also the related <a href='http://developer.chrome.com/extensions/ttsEngine'>ttsEngine</a> API, which allows an extension to implement a speech engine.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The index of the current character in the utterance. For word events, the event fires at the end of one word and before the beginning of the next. The <code>charIndex</code> represents a point in the text at the beginning of the next word to be spoken.",
            "optional": true,
            "name": "charIndex"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The error description, if the event type is <code>error</code>.",
            "optional": true,
            "name": "errorMessage"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if this is the final event that will be sent to this handler.",
            "optional": true,
            "name": "isFinalEvent"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The length of the next part of the utterance. For example, in a <code>word</code> event, this is the length of the word which will be spoken next. It will be set to -1 if not set by the speech engine.",
            "optional": true,
            "name": "length"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "An ID unique to the calling function's context so that events can get routed back to the correct tts.speak call.",
            "optional": true,
            "name": "srcId"
          },
          {
            "type": "reference",
            "referenceType": "EventType",
            "referenceLink": true,
            "comment": "The type can be <code>start</code> as soon as speech has started, <code>word</code> when a word boundary is reached, <code>sentence</code> when a sentence boundary is reached, <code>marker</code> when an SSML mark element is reached, <code>end</code> when the end of the utterance is reached, <code>interrupted</code> when the utterance is stopped or interrupted before reaching the end, <code>cancelled</code> when it's removed from the queue before ever being synthesized, or <code>error</code> when any other error occurs. When pausing speech, a <code>pause</code> event is fired if a particular utterance is paused in the middle, and <code>resume</code> if an utterance resumes speech. Note that pause and resume events may not fire if speech is paused in-between utterances.",
            "name": "type"
          }
        ],
        "comment": "An event from the TTS engine to communicate the status of an utterance.",
        "name": "TtsEvent"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "The TTS event types that you are interested in listening to. If missing, all event types may be sent.",
            "optional": true,
            "name": "desiredEventTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If true, enqueues this utterance if TTS is already in progress. If false (the default), interrupts any current speech and flushes the speech queue before speaking this new utterance.",
            "optional": true,
            "name": "enqueue"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The extension ID of the speech engine to use, if known.",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "reference",
            "referenceType": "VoiceGender",
            "referenceLink": true,
            "comment": "Gender of voice for synthesized speech.",
            "optional": true,
            "name": "gender"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The language to be used for synthesis, in the form <em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.",
            "optional": true,
            "name": "lang"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "This function is called with events that occur in the process of speaking the utterance.",
            "optional": true,
            "name": "onEvent"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Speaking pitch between 0 and 2 inclusive, with 0 being lowest and 2 being highest. 1.0 corresponds to a voice's default pitch.",
            "optional": true,
            "name": "pitch"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Speaking rate relative to the default rate for this voice. 1.0 is the default rate, normally around 180 to 220 words per minute. 2.0 is twice as fast, and 0.5 is half as fast. Values below 0.1 or above 10.0 are strictly disallowed, but many voices will constrain the minimum and maximum rates further&mdash;for example a particular voice may not actually speak faster than 3 times normal even if you specify a value larger than 3.0.",
            "optional": true,
            "name": "rate"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "The TTS event types the voice must support.",
            "optional": true,
            "name": "requiredEventTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the voice to use for synthesis. If empty, uses any available voice.",
            "optional": true,
            "name": "voiceName"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Speaking volume between 0 and 1 inclusive, with 0 being lowest and 1 being highest, with a default of 1.0.",
            "optional": true,
            "name": "volume"
          }
        ],
        "comment": "The speech options for the TTS engine.",
        "name": "TtsOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "EventType",
              "referenceLink": true
            },
            "comment": "All of the callback event types that this voice is capable of sending.",
            "optional": true,
            "name": "eventTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the extension providing this voice.",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "reference",
            "referenceType": "VoiceGender",
            "referenceLink": true,
            "comment": "This voice's gender.",
            "optional": true,
            "name": "gender"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The language that this voice supports, in the form <em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.",
            "optional": true,
            "name": "lang"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If true, the synthesis engine is a remote network resource. It may be higher latency and may incur bandwidth costs.",
            "optional": true,
            "name": "remote"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the voice.",
            "optional": true,
            "name": "voiceName"
          }
        ],
        "comment": "A description of a voice available for speech synthesis.",
        "name": "TtsVoice"
      },
      {
        "type": "?",
        "name": "EventType"
      },
      {
        "type": "?",
        "name": "VoiceGender"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getVoices"
      },
      {
        "type": "?",
        "name": "isSpeaking"
      },
      {
        "type": "?",
        "name": "pause"
      },
      {
        "type": "?",
        "name": "resume"
      },
      {
        "type": "?",
        "name": "speak"
      },
      {
        "type": "?",
        "name": "stop"
      }
    ]
  },
  {
    "name": "chrome.ttsEngine",
    "shortName": "ttsEngine",
    "comment": "Use the <code>chrome.ttsEngine</code> API to implement a text-to-speech(TTS) engine using an extension. If your extension registers using this API, it will receive events containing an utterance to be spoken and other parameters when any extension or Chrome App uses the <a href='tts'>tts</a> API to generate speech. Your extension can then use any available web technology to synthesize and output the speech, and send events back to the calling function to report the status.",
    "types": [
      {
        "type": "?",
        "name": "VoiceGender"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "sendTtsEvent"
      },
      {
        "type": "?",
        "name": "updateVoices"
      }
    ]
  },
  {
    "name": "chrome.types",
    "shortName": "types",
    "comment": "The <code>chrome.types</code> API contains type declarations for Chrome.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Clears the setting, restoring any default value.",
            "name": "clear"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Gets the value of a setting.",
            "name": "get"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Sets the value of a setting.",
            "name": "set"
          }
        ],
        "comment": "An interface that allows access to a Chrome browser setting. See $(ref:accessibilityFeatures) for an example.",
        "name": "ChromeSetting"
      },
      {
        "type": "?",
        "comment": "The scope of the ChromeSetting. One of<ul><li><var>regular</var>: setting for the regular profile (which is inherited by the incognito profile if not overridden elsewhere),</li><li><var>regular_only</var>: setting for the regular profile only (not inherited by the incognito profile),</li><li><var>incognito_persistent</var>: setting for the incognito profile that survives browser restarts (overrides regular preferences),</li><li><var>incognito_session_only</var>: setting for the incognito profile that can only be set during an incognito session and is deleted when the incognito session ends (overrides regular and incognito_persistent preferences).</li></ul>",
        "name": "ChromeSettingScope"
      },
      {
        "type": "?",
        "comment": "One of<ul><li><var>not_controllable</var>: cannot be controlled by any extension</li><li><var>controlled_by_other_extensions</var>: controlled by extensions with higher precedence</li><li><var>controllable_by_this_extension</var>: can be controlled by this extension</li><li><var>controlled_by_this_extension</var>: controlled by this extension</li></ul>",
        "name": "LevelOfControl"
      }
    ],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.virtualKeyboardPrivate",
    "shortName": "virtualKeyboardPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The height of the virtual keyboard window.",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The position of the virtual keyboard window's left edge.",
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The position of the virtual keyboard window's top edge.",
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The width of the virtual keyboard window.",
            "name": "width"
          }
        ],
        "name": "Bounds"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Bounds",
            "referenceLink": true,
            "comment": "The bounds of the virtual keyboard after changing mode",
            "name": "bounds"
          },
          {
            "type": "reference",
            "referenceType": "KeyboardMode",
            "referenceLink": true,
            "comment": "The value of the virtual keyboard mode to set to.",
            "name": "mode"
          }
        ],
        "name": "ContainerBehaviorOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "True if accessibility virtual keyboard is enabled.",
            "name": "a11ymode"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "List of experimental feature flags.",
            "name": "features"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Virtual keyboard is in hotrod mode.",
            "name": "hotrodmode"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Virtual keyboard layout string.",
            "name": "layout"
          }
        ],
        "name": "KeyboardConfig"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Unicode value of the key.",
            "name": "charValue"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Virtual key code, which is independent of the keyboard layout or modifier state.",
            "name": "keyCode"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Name of the key, which is independent of modifier state.",
            "name": "keyName"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Flag for modifiers that are active. None = 0, Shift = 2, Control = 4, Alt = 8.",
            "optional": true,
            "name": "modifiers"
          },
          {
            "type": "reference",
            "referenceType": "VirtualKeyboardEventType",
            "referenceLink": true,
            "name": "type"
          }
        ],
        "name": "VirtualKeyboardEvent"
      },
      {
        "type": "?",
        "comment": "The value of the virtual keyboard mode to set to.",
        "name": "KeyboardMode"
      },
      {
        "type": "?",
        "comment": "The value of the virtual keyboard state to change to.",
        "name": "KeyboardState"
      },
      {
        "type": "?",
        "comment": "One of keyup or keydown.",
        "name": "VirtualKeyboardEventType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getKeyboardConfig"
      },
      {
        "type": "?",
        "name": "hideKeyboard"
      },
      {
        "type": "?",
        "name": "insertText"
      },
      {
        "type": "?",
        "name": "keyboardLoaded"
      },
      {
        "type": "?",
        "name": "lockKeyboard"
      },
      {
        "type": "?",
        "name": "openSettings"
      },
      {
        "type": "?",
        "name": "openSuggestionSettings"
      },
      {
        "type": "?",
        "name": "sendKeyEvent"
      },
      {
        "type": "?",
        "name": "setAreaToRemainOnScreen"
      },
      {
        "type": "?",
        "name": "setContainerBehavior"
      },
      {
        "type": "?",
        "name": "setDraggableArea"
      },
      {
        "type": "?",
        "name": "setHitTestBounds"
      },
      {
        "type": "?",
        "name": "setHotrodKeyboard"
      },
      {
        "type": "?",
        "name": "setKeyboardState"
      },
      {
        "type": "?",
        "name": "setOccludedBounds"
      },
      {
        "type": "?",
        "name": "setWindowBoundsInScreen"
      }
    ]
  },
  {
    "name": "chrome.wallpaper",
    "shortName": "wallpaper",
    "comment": "Use the <code>chrome.wallpaper</code> API to change the ChromeOS wallpaper.",
    "types": [
      {
        "type": "?",
        "comment": "The supported wallpaper layouts.",
        "name": "WallpaperLayout"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "setWallpaper"
      }
    ]
  },
  {
    "name": "chrome.wallpaperPrivate",
    "shortName": "wallpaperPrivate",
    "comment": "",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The id of the collection used as a token to fetch images info.",
            "name": "collectionId"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the collection used for display.",
            "name": "collectionName"
          }
        ],
        "comment": "The name of a wallpaper collection (ie. a category such as Art, Landscape etc.) and its id.",
        "name": "CollectionInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The url of the Learn More link.",
            "name": "actionUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "The descriptive text such as the name of the artist.",
            "name": "displayText"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The url that points to the image.",
            "name": "imageUrl"
          }
        ],
        "comment": "The info (url, description etc.) specific to each wallpaper image.",
        "name": "ImageInfo"
      },
      {
        "type": "?",
        "name": "WallpaperSource"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "cancelPreviewWallpaper"
      },
      {
        "type": "?",
        "name": "confirmPreviewWallpaper"
      },
      {
        "type": "?",
        "name": "getCollectionsInfo"
      },
      {
        "type": "?",
        "name": "getCurrentWallpaperThumbnail"
      },
      {
        "type": "?",
        "name": "getImagesInfo"
      },
      {
        "type": "?",
        "name": "getLocalImageData"
      },
      {
        "type": "?",
        "name": "getLocalImagePaths"
      },
      {
        "type": "?",
        "name": "getOfflineWallpaperList"
      },
      {
        "type": "?",
        "name": "getStrings"
      },
      {
        "type": "?",
        "name": "getSurpriseMeImage"
      },
      {
        "type": "?",
        "name": "getSyncSetting"
      },
      {
        "type": "?",
        "name": "getThumbnail"
      },
      {
        "type": "?",
        "name": "minimizeInactiveWindows"
      },
      {
        "type": "?",
        "name": "recordWallpaperUMA"
      },
      {
        "type": "?",
        "name": "resetWallpaper"
      },
      {
        "type": "?",
        "name": "restoreMinimizedWindows"
      },
      {
        "type": "?",
        "name": "saveThumbnail"
      },
      {
        "type": "?",
        "name": "setCustomWallpaper"
      },
      {
        "type": "?",
        "name": "setCustomWallpaperLayout"
      },
      {
        "type": "?",
        "name": "setWallpaper"
      },
      {
        "type": "?",
        "name": "setWallpaperIfExists"
      }
    ]
  },
  {
    "name": "chrome.webNavigation",
    "shortName": "webNavigation",
    "comment": "Use the <code>chrome.webNavigation</code> API to receive notifications about the status of navigation requests in-flight.",
    "types": [
      {
        "type": "?",
        "name": "TransitionQualifier"
      },
      {
        "type": "?",
        "comment": "Cause of the navigation. The same transition types as defined in the history API are used. These are the same transition types as defined in the <a href=\"history#transition_types\">history API</a> except with <code>\"start_page\"</code> in place of <code>\"auto_toplevel\"</code> (for backwards compatibility).",
        "name": "TransitionType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "getAllFrames"
      },
      {
        "type": "?",
        "name": "getFrame"
      }
    ]
  },
  {
    "name": "chrome.webRequest",
    "shortName": "webRequest",
    "comment": "Use the <code>chrome.webRequest</code> API to observe and analyze traffic and to intercept, block, or modify requests in-flight.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "name": "password"
              },
              {
                "type": "primitive",
                "primitiveType": "intrinsic",
                "name": "username"
              }
            ],
            "comment": "Only used as a response to the onAuthRequired event. If set, the request is made using the supplied credentials.",
            "optional": true,
            "name": "authCredentials"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If true, the request is cancelled. This prevents the request from being sent. This can be used as a response to the onBeforeRequest, onBeforeSendHeaders, onHeadersReceived and onAuthRequired events.",
            "optional": true,
            "name": "cancel"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Only used as a response to the onBeforeRequest and onHeadersReceived events. If set, the original request is prevented from being sent/completed and is instead redirected to the given URL. Redirections to non-HTTP schemes such as <code>data:</code> are allowed. Redirects initiated by a redirect action use the original request method for the redirect, with one exception: If the redirect is initiated at the onHeadersReceived stage, then the redirect will be issued using the GET method. Redirects from URLs with <code>ws://</code> and <code>wss://</code> schemes are <b>ignored</b>.",
            "optional": true,
            "name": "redirectUrl"
          },
          {
            "type": "reference",
            "referenceType": "HttpHeaders",
            "referenceLink": true,
            "comment": "Only used as a response to the onBeforeSendHeaders event. If set, the request is made with these request headers instead.",
            "optional": true,
            "name": "requestHeaders"
          },
          {
            "type": "reference",
            "referenceType": "HttpHeaders",
            "referenceLink": true,
            "comment": "Only used as a response to the onHeadersReceived event. If set, the server is assumed to have responded with these response headers instead. Only return <code>responseHeaders</code> if you really want to modify the headers in order to limit the number of conflicts (only one extension may modify <code>responseHeaders</code> for each request).",
            "optional": true,
            "name": "responseHeaders"
          }
        ],
        "comment": "Returns value for event handlers that have the 'blocking' extraInfoSpec applied. Allows the event handler to modify network requests.",
        "name": "BlockingResponse"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "tabId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ResourceType",
              "referenceLink": true
            },
            "comment": "A list of request types. Requests that cannot match any of the types will be filtered out.",
            "optional": true,
            "name": "types"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "A list of URLs or URL patterns. Requests that cannot match any of the URLs will be filtered out.",
            "name": "urls"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "optional": true,
            "name": "windowId"
          }
        ],
        "comment": "An object describing filters to apply to webRequest events.",
        "name": "RequestFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "An ArrayBuffer with a copy of the data.",
            "optional": true,
            "name": "bytes"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "A string with the file's path and name.",
            "optional": true,
            "name": "file"
          }
        ],
        "comment": "Contains data uploaded in a URL request.",
        "name": "UploadData"
      },
      {
        "type": "?",
        "comment": "Contains data passed within form data. For urlencoded form it is stored as string if data is utf-8 string and as ArrayBuffer otherwise. For form-data it is ArrayBuffer. If form-data represents uploading file, it is string with filename, if the filename is provided.",
        "name": "FormDataItem"
      },
      {
        "type": "array",
        "elementType": {
          "type": "object",
          "properties": [
            {
              "type": "array",
              "elementType": {
                "type": "primitive",
                "primitiveType": "intrinsic"
              },
              "optional": true,
              "name": "binaryValue"
            },
            {
              "type": "primitive",
              "primitiveType": "intrinsic",
              "name": "name"
            },
            {
              "type": "primitive",
              "primitiveType": "intrinsic",
              "optional": true,
              "name": "value"
            }
          ]
        },
        "comment": "An array of HTTP headers. Each header is represented as a dictionary containing the keys <code>name</code> and either <code>value</code> or <code>binaryValue</code>.",
        "name": "HttpHeaders"
      },
      {
        "type": "?",
        "name": "IgnoredActionType"
      },
      {
        "type": "?",
        "name": "OnAuthRequiredOptions"
      },
      {
        "type": "?",
        "name": "OnBeforeRedirectOptions"
      },
      {
        "type": "?",
        "name": "OnBeforeRequestOptions"
      },
      {
        "type": "?",
        "name": "OnBeforeSendHeadersOptions"
      },
      {
        "type": "?",
        "name": "OnCompletedOptions"
      },
      {
        "type": "?",
        "name": "OnErrorOccurredOptions"
      },
      {
        "type": "?",
        "name": "OnHeadersReceivedOptions"
      },
      {
        "type": "?",
        "name": "OnResponseStartedOptions"
      },
      {
        "type": "?",
        "name": "OnSendHeadersOptions"
      },
      {
        "type": "?",
        "name": "ResourceType"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "The maximum number of times that <code>handlerBehaviorChanged</code> can be called per 10 minute sustained interval. <code>handlerBehaviorChanged</code> is an expensive function call that shouldn't be called often.",
        "name": "MAX_HANDLER_BEHAVIOR_CHANGED_CALLS_PER_10_MINUTES"
      }
    ],
    "methods": [
      {
        "type": "?",
        "name": "handlerBehaviorChanged"
      }
    ]
  },
  {
    "name": "chrome.webstorePrivate",
    "shortName": "webstorePrivate",
    "comment": "",
    "types": [
      {
        "type": "?",
        "name": "ExtensionInstallStatus"
      },
      {
        "type": "?",
        "comment": "Whether the API call succeeded, or the reason for failure.",
        "name": "Result"
      },
      {
        "type": "?",
        "name": "WebGlStatus"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "beginInstallWithManifest3"
      },
      {
        "type": "?",
        "name": "completeInstall"
      },
      {
        "type": "?",
        "name": "enableAppLauncher"
      },
      {
        "type": "?",
        "name": "getBrowserLogin"
      },
      {
        "type": "?",
        "name": "getEphemeralAppsEnabled"
      },
      {
        "type": "?",
        "name": "getExtensionStatus"
      },
      {
        "type": "?",
        "name": "getIsLauncherEnabled"
      },
      {
        "type": "?",
        "name": "getReferrerChain"
      },
      {
        "type": "?",
        "name": "getStoreLogin"
      },
      {
        "type": "?",
        "name": "getWebGLStatus"
      },
      {
        "type": "?",
        "name": "install"
      },
      {
        "type": "?",
        "name": "isInIncognitoMode"
      },
      {
        "type": "?",
        "name": "isPendingCustodianApproval"
      },
      {
        "type": "?",
        "name": "launchEphemeralApp"
      },
      {
        "type": "?",
        "name": "requestExtension"
      },
      {
        "type": "?",
        "name": "setStoreLogin"
      }
    ]
  },
  {
    "name": "chrome.webViewRequest",
    "shortName": "webViewRequest",
    "comment": "Use the <code>chrome.webViewRequest</code> API to intercept, block, or modify requests in-flight. It is potentially faster than the <a href='webRequest'><code>chrome.webRequest</code> API</a> because you can register rules that are evaluated in the browser rather than the JavaScript engine, which reduces roundtrip latencies and allows higher efficiency.",
    "types": [],
    "properties": [],
    "methods": []
  },
  {
    "name": "chrome.webviewTag",
    "shortName": "webviewTag",
    "comment": "Use the <code>webview</code> tag to actively load live content from the web over the network and embed it in your Chrome App. Your app can control the appearance of the <code>webview</code> and interact with the web content, initiate navigations in an embedded web page, react to error events that happen within it, and more (see <a href=\"#usage\">Usage</a>).",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Clear data accumulated on or after this date, represented in milliseconds since the epoch (accessible via the getTime method of the JavaScript <code>Date</code> object). If absent, defaults to <code>0</code> (which would remove all browsing data).",
            "optional": true,
            "name": "since"
          }
        ],
        "comment": "Options that determine what data should be cleared by <code>clearData</code>.",
        "name": "ClearDataOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' appcaches.",
            "optional": true,
            "name": "appcache"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Since Chrome 43.<br>The browser's cache. Note: when removing data, this clears the entire cache; it is not limited to the range you specify.",
            "optional": true,
            "name": "cache"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The partition's cookies.",
            "optional": true,
            "name": "cookies"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' filesystems.",
            "optional": true,
            "name": "fileSystems"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' IndexedDB data.",
            "optional": true,
            "name": "indexedDB"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' local storage data.",
            "optional": true,
            "name": "localStorage"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The partition's persistent cookies.",
            "optional": true,
            "name": "persistentCookies"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The partition's session cookies.",
            "optional": true,
            "name": "sessionCookies"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Websites' WebSQL data.",
            "optional": true,
            "name": "webSQL"
          }
        ],
        "comment": "A set of data types. Missing properties are interpreted as <code>false</code>.",
        "name": "ClearDataTypeSet"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If <code>all_frames</code> is <code>true</code>, this implies that the JavaScript or CSS should be injected into all frames of current page. By default, <code>all_frames</code> is <code>false</code> and the JavaScript or CSS is only injected into the top frame.",
            "optional": true,
            "name": "all_frames"
          },
          {
            "type": "reference",
            "referenceType": "InjectionItems",
            "referenceLink": true,
            "comment": "The CSS code or a list of CSS files to be injected into matching pages. These are injected in the order they appear, before any DOM is constructed or displayed for the page.",
            "optional": true,
            "name": "css"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Applied after matches to exclude URLs that match this glob. Intended to emulate the @exclude Greasemonkey keyword.",
            "optional": true,
            "name": "exclude_globs"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Excludes pages that this content script would otherwise be injected into.",
            "optional": true,
            "name": "exclude_matches"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Applied after matches to include only those URLs that also match this glob. Intended to emulate the @include Greasemonkey keyword.",
            "optional": true,
            "name": "include_globs"
          },
          {
            "type": "reference",
            "referenceType": "InjectionItems",
            "referenceLink": true,
            "comment": "The JavaScript code or a list of JavaScript files to be injected into matching pages. These are injected in the order they appear.",
            "optional": true,
            "name": "js"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether to insert the content script on about:blank and about:srcdoc. Content scripts will only be injected on pages when their inherit URL is matched by one of the declared patterns in the matches field. The inherit URL is the URL of the document that created the frame or window. Content scripts cannot be inserted in sandboxed frames.",
            "optional": true,
            "name": "match_about_blank"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Specifies which pages this content script will be injected into.",
            "name": "matches"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The name of the content script to inject.",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "chrome.extensionTypes.RunAt",
            "referenceLink": true,
            "comment": "The soonest that the JavaScript or CSS will be injected into the tab. Defaults to \"document_idle\".",
            "optional": true,
            "name": "run_at"
          }
        ],
        "comment": "Details of the content script to inject. Refer to the <a href='/extensions/content_scripts'>content scripts</a> documentation for more details.",
        "name": "ContentScriptDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "<p>Posts a message to the embedded web content as long as the embedded content is displaying a page from the target origin. This method is available once the page has completed loading. Listen for the <a href=\"#event-contentload\">contentload</a> event and then call the method.</p><p>The guest will be able to send replies to the embedder by posting message to <code>event.source</code> on the message event it receives.</p><p>This API is identical to the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.postMessage\">HTML5 postMessage API</a> for communication between web pages. The embedder may listen for replies by adding a <code>message</code> event listener to its own frame.</p>",
            "name": "postMessage"
          }
        ],
        "comment": "Messaging handle to a guest window.",
        "name": "ContentWindow"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The initial state of a checkbox or radio item: true for selected and false for unselected. Only one radio item can be selected at a time in a given group of radio items.",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "?",
            "comment": "List of contexts this menu item will appear in. Defaults to ['page'] if not specified.",
            "optional": true,
            "name": "contexts"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Lets you restrict the item to apply only to documents whose URL matches one of the given patterns. (This applies to frames as well.) For details on the format of a pattern, see <a href='match_patterns'>Match Patterns</a>.",
            "optional": true,
            "name": "documentUrlPatterns"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether this context menu item is enabled or disabled. Defaults to <code>true</code>.",
            "optional": true,
            "name": "enabled"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The unique ID to assign to this item. Mandatory for event pages. Cannot be the same as another ID for this extension.",
            "optional": true,
            "name": "id"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "A function that will be called back when the menu item is clicked.",
            "optional": true,
            "name": "onclick"
          },
          {
            "type": "?",
            "comment": "The ID of a parent menu item; this makes the item a child of a previously added item.",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Similar to documentUrlPatterns, but lets you filter based on the <code>src</code> attribute of img/audio/video tags and the <code>href</code> of anchor tags.",
            "optional": true,
            "name": "targetUrlPatterns"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The text to be displayed in the item; this is <em>required</em> unless <code>type</code> is 'separator'. When the context is 'selection', you can use <code>%s</code> within the string to show the selected text. For example, if this parameter's value is \"Translate '%s' to Pig Latin\" and the user selects the word \"cool\", the context menu item for the selection is \"Translate 'cool' to Pig Latin\".",
            "optional": true,
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "chrome.contextMenus.ItemType",
            "referenceLink": true,
            "comment": "The type of menu item. Defaults to 'normal' if not specified.",
            "optional": true,
            "name": "type"
          }
        ],
        "name": "ContextMenuCreateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The state of a checkbox or radio item: true for selected and false for unselected. Only one radio item can be selected at a time in a given group of radio items.",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "?",
            "comment": "List of contexts this menu item will appear in.",
            "optional": true,
            "name": "contexts"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Lets you restrict the item to apply only to documents whose URL matches one of the given patterns. (This applies to frames as well.) For details on the format of a pattern, see <a href='match_patterns'>Match Patterns</a>.",
            "optional": true,
            "name": "documentUrlPatterns"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether this context menu item is enabled or disabled.",
            "optional": true,
            "name": "enabled"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "A function that will be called back when the menu item is clicked.",
            "optional": true,
            "name": "onclick"
          },
          {
            "type": "?",
            "comment": "The ID of a parent menu item; this makes the item a child of a previously added item. <em>Note:</em> You cannot change an item to be a child of one of its own descendants.",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "Similar to documentUrlPatterns, but lets you filter based on the <code>src</code> attribute of img/audio/video tags and the <code>href</code> of anchor tags.",
            "optional": true,
            "name": "targetUrlPatterns"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The text to be displayed in the item",
            "optional": true,
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "chrome.contextMenus.ItemType",
            "referenceLink": true,
            "comment": "The type of menu item.",
            "optional": true,
            "name": "type"
          }
        ],
        "name": "ContextMenuUpdateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Creates a new context menu item. Note that if an error occurs during creation, you may not find out until the creation callback fires (the details will be in $(ref:runtime.lastError)).",
            "name": "create"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Removes a context menu item.",
            "name": "remove"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Removes all context menu items added to this <code>webview</code>.",
            "name": "removeAll"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Updates a previously created context menu item.",
            "name": "update"
          }
        ],
        "name": "ContextMenus"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Reject the dialog. Equivalent to clicking Cancel in a <code>confirm</code> or <code>prompt</code> dialog.",
            "name": "cancel"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Accept the dialog. Equivalent to clicking OK in an <code>alert</code>, <code>confirm</code>, or <code>prompt</code> dialog.",
            "name": "ok"
          }
        ],
        "comment": "Interface attached to <code>dialog</code> DOM events.",
        "name": "DialogController"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Allow the permission request.",
            "name": "allow"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Deny the permission request. This is the default behavior if <code>allow</code> is not called.",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The HTTP request type (e.g. <code>GET</code>) associated with the download request.",
            "name": "requestMethod"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The requested download URL.",
            "name": "url"
          }
        ],
        "comment": "The type of <code>request</code> object which accompanies a <code>download</code> <a href=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.",
        "name": "DownloadPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Allow the permission request.",
            "name": "allow"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Deny the permission request.",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL of the frame requesting access to local file system.",
            "name": "url"
          }
        ],
        "comment": "The type of <code>request</code> object which accompanies a <code>filesystem</code> <a href=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.",
        "name": "FileSystemPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ordinal number of the current match.",
            "name": "activeMatchOrdinal"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Indicates whether this find request was canceled.",
            "name": "canceled"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The number of times <code>searchText</code> was matched on the page.",
            "name": "numberOfMatches"
          },
          {
            "type": "reference",
            "referenceType": "SelectionRect",
            "referenceLink": true,
            "comment": "Describes a rectangle around the active match in screen coordinates.",
            "name": "selectionRect"
          }
        ],
        "comment": "Contains all of the results of the find request.",
        "name": "FindCallbackResults"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Flag to find matches in reverse order. The default value is <code>false</code>.",
            "optional": true,
            "name": "backward"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Flag to match with case-sensitivity. The default value is <code>false</code>.",
            "optional": true,
            "name": "matchCase"
          }
        ],
        "comment": "Options for the find request.",
        "name": "FindOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Allow the permission request.",
            "name": "allow"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Deny the permission request.",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The origin of the frame inside the <code>webview</code> that initiated the fullscreen request.",
            "name": "origin"
          }
        ],
        "comment": "The type of <code>request</code> object which accompanies a <code>fullscreen</code> <a href=\"#event-permissionrequest\">permissionrequest</a> DOM event.<p>",
        "name": "FullscreenPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Allow the permission request.",
            "name": "allow"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Deny the permission request. This is the default behavior if <code>allow</code> is not called.",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL of the frame requesting access to geolocation data.",
            "name": "url"
          }
        ],
        "comment": "The type of <code>request</code> object which accompanies a <code>geolocation</code> <a href=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.",
        "name": "GeolocationPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "JavaScript or CSS code to inject.<br><br><b>Warning:</b><br>Be careful using the <code>code</code> parameter. Incorrect use of it may open your app to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\">cross site scripting</a> attacks.",
            "optional": true,
            "name": "code"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "JavaScript or CSS file to inject.",
            "optional": true,
            "name": "file"
          }
        ],
        "comment": "Details of the script or CSS to inject. Either the code or the file property must be set, but both may not be set at the same time.",
        "name": "InjectDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "JavaScript code or CSS to be injected into matching pages.",
            "optional": true,
            "name": "code"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "intrinsic"
            },
            "comment": "The list of JavaScript or CSS files to be injected into matching pages. These are injected in the order they appear in this array.",
            "optional": true,
            "name": "files"
          }
        ],
        "comment": "The type of injection item: code or a set of files.",
        "name": "InjectionItems"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Allow the permission request. This is the default behavior if <code>deny</code> is not called..",
            "name": "allow"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Deny the permission request.",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The plugin's identifier string.",
            "name": "identifier"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The plugin's display name.",
            "name": "name"
          }
        ],
        "comment": "The type of <code>request</code> object which accompanies a <code>loadplugin</code> <a href=\"#event-permissionrequest\">permissionrequest</a> DOM event.<p>",
        "name": "LoadPluginPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Allow the permission request.",
            "name": "allow"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Deny the permission request. This is the default behavior if <code>allow</code> is not called.",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL of the frame requesting access to user media.",
            "name": "url"
          }
        ],
        "comment": "The type of <code>request</code> object which accompanies a <code>media</code> <a href=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.",
        "name": "MediaPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Attach the requested target page to an existing <code>webview</code> element.",
            "name": "attach"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Cancel the new window request.",
            "name": "discard"
          }
        ],
        "comment": "Interface attached to <code>newwindow</code> DOM events.",
        "name": "NewWindow"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "Allow the permission request.",
            "name": "allow"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "Deny the permission request. This is the default behavior if <code>allow</code> is not called.",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether or not the requesting frame was the most recent client to hold pointer lock.",
            "name": "lastUnlockedBySelf"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The URL of the frame requesting pointer lock.",
            "name": "url"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether or not pointer lock was requested as a result of a user input gesture.",
            "name": "userGesture"
          }
        ],
        "comment": "The type of <code>request</code> object which accompanies a <code>pointerLock</code> <a href=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.",
        "name": "PointerLockPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Height of the rectangle.",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Distance from the left edge of the screen to the left edge of the rectangle.",
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Distance from the top edge of the screen to the top edge of the rectangle.",
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Width of the rectangle.",
            "name": "width"
          }
        ],
        "comment": "<p>Describes a rectangle in screen coordinates.</p><p>The containment semantics are array-like; that is, the coordinate <code>(left, top)</code> is considered to be contained by the rectangle, but the coordinate <code>(left + width, top)</code> is not.</p>",
        "name": "SelectionRect"
      },
      {
        "type": "type",
        "properties": [],
        "comment": "Interface which provides access to webRequest events on the guest page. See the <a href=\"http://developer.chrome.com/extensions/webRequest\">chrome.webRequest</a> extensions API for details on webRequest life cycle and related concepts. Note: The <a href=\"/extensions/webRequest#event-onActionIgnored\">chrome.webRequest.onActionIgnored</a> event is not supported for webviews. <p>To illustrate how usage differs from the extensions webRequest API, consider the following example code which blocks any guest requests for URLs which match <code>*://www.evil.com/*</code>:</p><pre>webview.request.onBeforeRequest.addListener(\nfunction(details) { return {cancel: true}; },\n{urls: [\"*://www.evil.com/*\"]},\n[\"blocking\"]);</pre><p>Additionally, this interface supports declarative webRequest rules through <code>onRequest</code> and <code>onMessage</code> events. See <a href=\"http://developer.chrome.com/extensions/declarativeWebRequest.html\">declarativeWebRequest</a> for API details.</p>Note that conditions and actions for declarative webview webRequests should be instantiated from their <code>chrome.webViewRequest.*</code> counterparts. The following example code declaratively blocks all requests to <code>\"example.com\"</code> on the webview <code>myWebview</code>:</p><pre>var rule = {\nconditions: [\nnew chrome.webViewRequest.RequestMatcher({ url: { hostSuffix: 'example.com' } })\n],\nactions: [ new chrome.webViewRequest.CancelRequest() ]\n};\nmyWebview.request.onRequest.addRules([rule]);</pre>",
        "name": "WebRequestEventInterface"
      },
      {
        "type": "?",
        "comment": "The different contexts a menu can appear in. Specifying 'all' is equivalent to the combination of all other contexts.",
        "name": "ContextType"
      },
      {
        "type": "?",
        "comment": "Defines the how zooming is handled in the <code>webview</code>.",
        "name": "ZoomMode"
      },
      {
        "type": "reference",
        "referenceType": "ContentWindow",
        "referenceLink": true,
        "comment": "Object reference which can be used to post messages into the guest page.",
        "name": "contentWindow"
      },
      {
        "type": "reference",
        "referenceType": "ContextMenus",
        "referenceLink": true,
        "comment": "Similar to <a href='contextMenus'>chrome's ContextMenus API</a>, but applies to <code>webview</code> instead of browser. Use the <code>webview.contextMenus</code> API to add items to <code>webview</code>'s context menu. You can choose what types of objects your context menu additions apply to, such as images, hyperlinks, and pages.",
        "name": "contextMenus"
      },
      {
        "type": "reference",
        "referenceType": "WebRequestEventInterface",
        "referenceLink": true,
        "comment": "Interface which provides access to webRequest events on the guest page.",
        "name": "request"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "?",
        "name": "addContentScripts"
      },
      {
        "type": "?",
        "name": "back"
      },
      {
        "type": "?",
        "name": "canGoBack"
      },
      {
        "type": "?",
        "name": "canGoForward"
      },
      {
        "type": "?",
        "name": "captureVisibleRegion"
      },
      {
        "type": "?",
        "name": "clearData"
      },
      {
        "type": "?",
        "name": "executeScript"
      },
      {
        "type": "?",
        "name": "find"
      },
      {
        "type": "?",
        "name": "forward"
      },
      {
        "type": "?",
        "name": "getAudioState"
      },
      {
        "type": "?",
        "name": "getProcessId"
      },
      {
        "type": "?",
        "name": "getUserAgent"
      },
      {
        "type": "?",
        "name": "getZoom"
      },
      {
        "type": "?",
        "name": "getZoomMode"
      },
      {
        "type": "?",
        "name": "go"
      },
      {
        "type": "?",
        "name": "insertCSS"
      },
      {
        "type": "?",
        "name": "isAudioMuted"
      },
      {
        "type": "?",
        "name": "isSpatialNavigationEnabled"
      },
      {
        "type": "?",
        "name": "isUserAgentOverridden"
      },
      {
        "type": "?",
        "name": "loadDataWithBaseUrl"
      },
      {
        "type": "?",
        "name": "print"
      },
      {
        "type": "?",
        "name": "reload"
      },
      {
        "type": "?",
        "name": "removeContentScripts"
      },
      {
        "type": "?",
        "name": "setAudioMuted"
      },
      {
        "type": "?",
        "name": "setSpatialNavigationEnabled"
      },
      {
        "type": "?",
        "name": "setUserAgentOverride"
      },
      {
        "type": "?",
        "name": "setZoom"
      },
      {
        "type": "?",
        "name": "setZoomMode"
      },
      {
        "type": "?",
        "name": "stop"
      },
      {
        "type": "?",
        "name": "stopFinding"
      },
      {
        "type": "?",
        "name": "terminate"
      }
    ]
  },
  {
    "name": "chrome.windows",
    "shortName": "windows",
    "comment": "Use the <code>chrome.windows</code> API to interact with browser windows. You can use this API to create, modify, and rearrange windows in the browser.",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "If true, the $(ref:windows.Window) object has a <var>tabs</var> property that contains a list of the $(ref:tabs.Tab) objects. The <code>Tab</code> objects only contain the <code>url</code>, <code>pendingUrl</code>, <code>title</code>, and <code>favIconUrl</code> properties if the extension's manifest file includes the <code>\"tabs\"</code> permission.",
            "optional": true,
            "name": "populate"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "WindowType",
              "referenceLink": true
            },
            "comment": "If set, the $(ref:windows.Window) returned is filtered based on its type. If unset, the default filter is set to <code>['normal', 'popup']</code>.",
            "optional": true,
            "name": "windowTypes"
          }
        ],
        "name": "QueryOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the window is set to be always on top.",
            "name": "alwaysOnTop"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the window is currently the focused window.",
            "name": "focused"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The height of the window, including the frame, in pixels. In some circumstances a window may not be assigned a <code>height</code> property; for example, when querying closed windows from the $(ref:sessions) API.",
            "optional": true,
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The ID of the window. Window IDs are unique within a browser session. In some circumstances a window may not be assigned an <code>ID</code> property; for example, when querying windows using the $(ref:sessions) API, in which case a session ID may be present.",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "Whether the window is incognito.",
            "name": "incognito"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The offset of the window from the left edge of the screen in pixels. In some circumstances a window may not be assigned a <code>left</code> property; for example, when querying closed windows from the $(ref:sessions) API.",
            "optional": true,
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The session ID used to uniquely identify a window, obtained from the $(ref:sessions) API.",
            "optional": true,
            "name": "sessionId"
          },
          {
            "type": "reference",
            "referenceType": "WindowState",
            "referenceLink": true,
            "comment": "The state of this browser window.",
            "optional": true,
            "name": "state"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Tab",
              "referenceLink": true
            },
            "comment": "Array of $(ref:tabs.Tab) objects representing the current tabs in the window.",
            "optional": true,
            "name": "tabs"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The offset of the window from the top edge of the screen in pixels. In some circumstances a window may not be assigned a <code>top</code> property; for example, when querying closed windows from the $(ref:sessions) API.",
            "optional": true,
            "name": "top"
          },
          {
            "type": "reference",
            "referenceType": "WindowType",
            "referenceLink": true,
            "comment": "The type of browser window this is.",
            "optional": true,
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "intrinsic",
            "comment": "The width of the window, including the frame, in pixels. In some circumstances a window may not be assigned a <code>width</code> property; for example, when querying closed windows from the $(ref:sessions) API.",
            "optional": true,
            "name": "width"
          }
        ],
        "name": "Window"
      },
      {
        "type": "?",
        "comment": "Specifies what type of browser window to create. 'panel' is deprecated and is available only to existing whitelisted extensions on Chrome OS.",
        "name": "CreateType"
      },
      {
        "type": "?",
        "comment": "The state of this browser window. In some circumstances a window may not be assigned a <code>state</code> property; for example, when querying closed windows from the $(ref:sessions) API.",
        "name": "WindowState"
      },
      {
        "type": "?",
        "comment": "The type of browser window this is. In some circumstances a window may not be assigned a <code>type</code> property; for example, when querying closed windows from the $(ref:sessions) API.",
        "name": "WindowType"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "The windowId value that represents the <a href='windows#current-window'>current window</a>.",
        "name": "WINDOW_ID_CURRENT"
      },
      {
        "type": "primitive",
        "primitiveType": "intrinsic",
        "comment": "The windowId value that represents the absence of a chrome browser window.",
        "name": "WINDOW_ID_NONE"
      }
    ],
    "methods": [
      {
        "type": "?",
        "name": "create"
      },
      {
        "type": "?",
        "name": "get"
      },
      {
        "type": "?",
        "name": "getAll"
      },
      {
        "type": "?",
        "name": "getCurrent"
      },
      {
        "type": "?",
        "name": "getLastFocused"
      },
      {
        "type": "?",
        "name": "remove"
      },
      {
        "type": "?",
        "name": "update"
      }
    ]
  }
]